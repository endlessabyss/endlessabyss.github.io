<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>实现apply,bind,call</title>
    <url>/2020/07/02/%E5%AE%9E%E7%8E%B0apply-bind-call/</url>
    <content><![CDATA[<h2 id="手写call、apply、及bind"><a href="#手写call、apply、及bind" class="headerlink" title="手写call、apply、及bind"></a>手写call、apply、及bind</h2><h3 id="首先从以下几点来考虑如何实现这几个函数"><a href="#首先从以下几点来考虑如何实现这几个函数" class="headerlink" title="首先从以下几点来考虑如何实现这几个函数"></a>首先从以下几点来考虑如何实现这几个函数</h3><ul>
<li>不传入第一个参数，那么上下文默认为 <code>window</code></li>
<li>改变了<code>this</code>指向，让新的对象可以执行该函数，并能接受参数</li>
</ul>
<h2 id="调用模板"><a href="#调用模板" class="headerlink" title="调用模板"></a>调用模板</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">    value:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(name)</span><br><span class="line">    <span class="built_in">console</span>.log(age)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.value)</span><br><span class="line">&#125;</span><br><span class="line">getValue.myCall(a,<span class="string">'ycy'</span>,<span class="string">'22'</span>)</span><br><span class="line">getValue.myApply(a, [<span class="string">'ycy'</span>, <span class="string">'22'</span>])</span><br></pre></td></tr></table></figure></div>



<h3 id="实现call"><a href="#实现call" class="headerlink" title="实现call"></a>实现call</h3><ul>
<li>首先<code>context</code>为可选参数，如果不传的话，默认上下文为<code>window</code></li>
<li>接下来<code>context</code>创建一个<code>fn</code>属性，并将值设置为需要调用的函数</li>
<li>因为<code>call</code>可以传入多个参数作为调用函数的参数，所以需要将参数剥离出来</li>
<li>然后调用函数并将对象上的函数删除</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myCall = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="keyword">this</span> !== <span class="string">'funcyion'</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">'Error'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    context = context || <span class="built_in">window</span></span><br><span class="line">    context.fn = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">const</span> args = [...arguments].slice(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">const</span> result = context.fn(...args)</span><br><span class="line">    <span class="keyword">delete</span> context.fn</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="实现apply"><a href="#实现apply" class="headerlink" title="实现apply"></a>实现apply</h3><ul>
<li>apply的实现也类似，区别在于对参数的处理</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myAplly = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="keyword">this</span> !== <span class="string">'function'</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">'Error'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    context = context || <span class="built_in">window</span></span><br><span class="line">    context.fn = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">let</span> result</span><br><span class="line">    <span class="comment">//处理参数和call有区别</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">1</span>])&#123;</span><br><span class="line">        result = context.fn(...arguments[<span class="number">1</span>])</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        result = context.fn()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span> context.fn</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="实现bind"><a href="#实现bind" class="headerlink" title="实现bind"></a>实现bind</h3><p><code>bind的实现对比其他两个函数略微地复杂了一点，因为bind需要返回一个函数，需要判断一些边界问题</code></p>
<ul>
<li><code>bind</code>返回了一个函数，对于函数来说有两种方式调用，一种是直接调用，一种是通过<code>new</code>方式</li>
<li>对于直接调用来说，这里选择了<code>apply</code>的方式实现，但是对于参数需要注意以下情况：因为<code>bind</code>可以实现类似这样的代码<code>f.binde(obj,1)(2)</code>，所以我么需要将两边的参数拼接起来，于是就有了这样的实现<code>args.contact(...arguments)</code></li>
<li>最后来说通过<code>new</code>的情况来说，不会被任何改变<code>this</code>，所以对于这种情况我们需要忽略传入的<code>this</code></li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myBind = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="keyword">this</span> !== <span class="string">'function'</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">'Error'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> _this=<span class="keyword">this</span></span><br><span class="line">    <span class="keyword">const</span> args = [...arguments].slice(<span class="number">1</span>)</span><br><span class="line">    <span class="comment">//返回一个函数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//因为返回了一个函数，我们可以new F（），所以需要判断</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span> <span class="keyword">instanceof</span> F)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> _this(...args,...arguments)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> _this.apply(context,args.concat(...arguments))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>JS</category>
      </categories>
  </entry>
  <entry>
    <title>webpack安装与实践</title>
    <url>/2020/04/04/webpack%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<h3 id="webpack基础知识与工具使用"><a href="#webpack基础知识与工具使用" class="headerlink" title="webpack基础知识与工具使用"></a>webpack基础知识与工具使用</h3><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>它是一个前端资源加载/打包工具，将根据模块的依赖关系</p>
<p>进行静态分析，并依据规则生成对应的静态资源</p>
]]></content>
  </entry>
  <entry>
    <title>git_learn</title>
    <url>/2020/04/04/git-learn/</url>
    <content><![CDATA[<h3 id="git基础"><a href="#git基础" class="headerlink" title="git基础"></a>git基础</h3><h4 id="git介绍"><a href="#git介绍" class="headerlink" title="git介绍"></a>git介绍</h4><p>git是目前世界上最先进的分布式控制系统</p>
<h3 id="git与github"><a href="#git与github" class="headerlink" title="git与github"></a>git与github</h3><h4 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h4><p>git是一个分布式版本空值系统，简单来说就是一个软件，用于记录一个或若干个文件内容的变化，一便于将来查阅特定版本修订情况的软件</p>
<p>Github ：<a href="http://www.github.com" target="_blank" rel="noopener">www.github.com</a></p>
<h3 id="git的使用"><a href="#git的使用" class="headerlink" title="git的使用"></a>git的使用</h3><h4 id="git本地操作三个区域："><a href="#git本地操作三个区域：" class="headerlink" title="git本地操作三个区域："></a>git本地操作三个区域：</h4><a href="/2020/04/04/git-learn/git-learn/image-20200404161156822.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/04/04/git-learn/git-learn/image-20200404161156822.png" class="lazyload"></a>

<h4 id="工作流程："><a href="#工作流程：" class="headerlink" title="工作流程："></a>工作流程：</h4><a href="/2020/04/04/git-learn/git-learn/image-20200404161225329.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/04/04/git-learn/git-learn/image-20200404161225329.png" class="lazyload"></a>

<h4 id="本地仓库操作："><a href="#本地仓库操作：" class="headerlink" title="本地仓库操作："></a>本地仓库操作：</h4><a href="/2020/04/04/git-learn/git-learn/image-20200404161350588.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/04/04/git-learn/git-learn/image-20200404161350588.png" class="lazyload"></a>

<a href="/2020/04/04/git-learn/git-learn/image-20200404161359494.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/04/04/git-learn/git-learn/image-20200404161359494.png" class="lazyload"></a>

<ol>
<li>创建空目录  mkdir filename</li>
<li>在命令中进入目录</li>
<li>git仓库初始化（告诉git需要管理此目录）  git init</li>
</ol>
<p>表现：执行之后在项目目录下创建 .git 隐藏目录，不能删除，也不能随意更改</p>
<h5 id="git常用操作指令："><a href="#git常用操作指令：" class="headerlink" title="git常用操作指令："></a>git常用操作指令：</h5><p>查看当前状态：git status         非必要</p>
<p>添加到缓存区： git add filename</p>
<p><strong>说明</strong> ：git add 指令，可以添加一个文件，也可以同时添加多个文件。</p>
<p>语法1：git add filename</p>
<p>语法2：git add filename1 filename2 filename3</p>
<p>语法3：git add 添加当前文件到缓存区</p>
<p>提交至版本库： git commit -m “注释内容”</p>
<p>在后续对于文件（可以操作1个或多个）操作之后  可以重复操作 git add           git  commit</p>
<h5 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h5><ol>
<li>查看版本  git log      /       git  log  –pretty=oneline</li>
<li>回退操作：git reset –hard  提交编号</li>
</ol>
<p>注意：回到过去之后，要想回到之前最新的版本的时候，则需要使用指令去查看历史操作，以得到最新的commit id           </p>
<p>指令： git reflog</p>
<p>小结：①要想回到过去，必须先得到commit id，然后通过git reset -hard 进行回退   ②要想回到未来，则需要使用git reflog进行历史操作查看，得到最新的commit id  ③ 在写回退指令的时候commit id可以不写全，git自动识别，但是也不能写太少，至少需要写前4位字符</p>
<h3 id="github-远程仓库的创建"><a href="#github-远程仓库的创建" class="headerlink" title="github 远程仓库的创建"></a>github 远程仓库的创建</h3><h4 id="两种常规方式"><a href="#两种常规方式" class="headerlink" title="两种常规方式"></a>两种常规方式</h4><h5 id="基于http协议"><a href="#基于http协议" class="headerlink" title="基于http协议"></a>基于http协议</h5><ol>
<li><p>创建空目录，</p>
</li>
<li><p>使用clone指令克隆线上仓库到本地</p>
<p>指令：git clone + 地址</p>
</li>
<li><p>在仓库上做对应的操作（提交暂存区，提交本地仓库，拉去线上仓库） 提交到线上仓库的指令：git push</p>
<p><em>在首次往线上仓库提交内容的时候出现了403的错误，原因是，不是任何人都可以在线上仓库提交内容</em></p>
<p>修改git隐藏文件中 url地址修改如：hhtps://用户名：密码@github.com/用户名/仓库名.git  。 当克隆线上仓库可直接进行修改，只需要加入用户名和密码</p>
<p>设置好以后再重新上传: git push</p>
</li>
<li><p>拉取线上仓库与本地仓库同步：git pull</p>
</li>
</ol>
<p>提醒：在每天工作的第一件事git pull拉取线上最新的版本；每天下班前要做的是 git push，将本地代码提交到线上仓库</p>
<h5 id="基于SSH的方式（需自行安装openSSH）"><a href="#基于SSH的方式（需自行安装openSSH）" class="headerlink" title="基于SSH的方式（需自行安装openSSH）"></a>基于SSH的方式（需自行安装openSSH）</h5><p>步骤：① 生成客户端公私钥文件 ②将公钥上传到Github</p>
<p>创建公私钥文件 ： ssh-keygen -t rsa -C “github注册邮箱”</p>
<p>根据命令界面提示的文件目录，找到ssh.pub文件，复制密钥到github仓库</p>
<p>③ 执行基于SSH的代码克隆，在github仓库可选http和ssh，以后的操作指令都和基于http类似</p>
<h4 id="分支管理（分支文件互不影响）"><a href="#分支管理（分支文件互不影响）" class="headerlink" title="分支管理（分支文件互不影响）"></a>分支管理（分支文件互不影响）</h4><h5 id="分支相关指令"><a href="#分支相关指令" class="headerlink" title="分支相关指令"></a>分支相关指令</h5><p>查看分支：git branch    当前分支有个标记 “*”</p>
<p>创建分支：git branch 分支名</p>
<p>切换分支：git checkout 分支名</p>
<p>删除分支： git branch-d 分支名</p>
<p><em>注意：在删除分支的时候一定要退出要删除的分支</em></p>
<p>合并分支： git merge </p>
<p><em>合并分支后 需要提交到远程仓库中</em></p>
<h4 id="冲突的产生与解决"><a href="#冲突的产生与解决" class="headerlink" title="冲突的产生与解决"></a>冲突的产生与解决</h4><p>1、git冲突的场景</p>
<ul>
<li>情景一：多个分支代码合并到一个分支时；</li>
<li>情景二：多个分支向同一个远端分支推送代码时；</li>
</ul>
<p>实际上，push操作即是将本地代码merge到远端库分支上。</p>
<p>关于push和pull其实就分别是用本地分支合并到远程分支 和 将远程分支合并到本地分支</p>
<p>所以这两个过程中也可能存在冲突。</p>
<p>git的合并中产生冲突的具体情况：<br>　　&lt;1&gt;两个分支中修改了同一个文件（不管什么地方）<br>　　&lt;2&gt;两个分支中修改了同一个文件的名称<br>两个分支中分别修改了不同文件中的部分，不会产生冲突，可以直接将两部分合并。</p>
<p>2、冲突解决方法</p>
<ul>
<li><p>情景一：在当前分支上，直接修改冲突代码—&gt;add—&gt;commit。</p>
</li>
<li><p>情景二：在本地当前分支上，修改冲突代码—&gt;add—&gt;commit—&gt;push</p>
<p>注：借用vim或者IDE或者直接找到冲突文件，修改。</p>
</li>
</ul>
<h3 id="git实用技能"><a href="#git实用技能" class="headerlink" title="git实用技能"></a>git实用技能</h3><h4 id="图形化界面工具推荐"><a href="#图形化界面工具推荐" class="headerlink" title="图形化界面工具推荐"></a>图形化界面工具推荐</h4><p>① Github for Desktop</p>
<p>②  Source tree （号称最好用Git  GUI工具）</p>
<p>③  TortoiseGit（海龟Git   前辈TortoiseSVN）</p>
<p>④  Git自带的GUI 工具 （不推荐）</p>
<h3 id="忽略文件操作"><a href="#忽略文件操作" class="headerlink" title="忽略文件操作"></a>忽略文件操作</h3><h4 id="常见规则写法有如下几种"><a href="#常见规则写法有如下几种" class="headerlink" title="常见规则写法有如下几种"></a>常见规则写法有如下几种</h4><p>创建 .gitigno文件  Linux命令  touch</p>
<p>mtk代表文件夹</p>
<p>1） /mtk/   过滤整个文件夹</p>
<p>2） *.zip       过滤所有 .zip文件</p>
<p>3） /mtk/do.c            过滤某个具体文件</p>
<p>4） !index.php            不过滤某个具体文件</p>
]]></content>
  </entry>
  <entry>
    <title>echarts 各个配置项详细说明总结</title>
    <url>/2020/03/26/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8F%92%E4%BB%B6echarts/</url>
    <content><![CDATA[<p>转自菜鸟教程：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tr><td class="code"><pre><span class="line">theme = &#123;</span><br><span class="line">    <span class="comment">// 全图默认背景</span></span><br><span class="line">    <span class="comment">// backgroundColor: 'rgba(0,0,0,0)',</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认色板</span></span><br><span class="line">    color: ['#ff7f50','#87cefa','#da70d6','#32cd32','#6495ed',</span><br><span class="line">            '#ff69b4','#ba55d3','#cd5c5c','#ffa500','#40e0d0',</span><br><span class="line">            '#1e90ff','#ff6347','#7b68ee','#00fa9a','#ffd700',</span><br><span class="line">            '#6699FF','#ff6666','#3cb371','#b8860b','#30e0e0'],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图表标题</span></span><br><span class="line">    title: &#123;</span><br><span class="line">        x: 'left',                 // 水平安放位置，默认为左对齐，可选为：</span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：</span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        <span class="comment">//textAlign: null          // 水平对齐方式，默认根据x设置自动调整</span></span><br><span class="line">        backgroundColor: 'rgba(0,0,0,0)',</span><br><span class="line">        borderColor: '#ccc',       // 标题边框颜色</span><br><span class="line">        borderWidth: 0,            // 标题边框线宽，单位px，默认为0（无边框）</span><br><span class="line">        padding: 5,                // 标题内边距，单位px，默认各方向内边距为5，</span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: 10,               // 主副标题纵向间隔，单位px，默认为10，</span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            fontSize: 18,</span><br><span class="line">            fontWeight: 'bolder',</span><br><span class="line">            color: '#333'          // 主标题文字颜色</span><br><span class="line">        &#125;,</span><br><span class="line">        subtextStyle: &#123;</span><br><span class="line">            color: '#aaa'          // 副标题文字颜色</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图例</span></span><br><span class="line">    legend: &#123;</span><br><span class="line">        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：</span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        x: 'center',               // 水平安放位置，默认为全图居中，可选为：</span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：</span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        backgroundColor: 'rgba(0,0,0,0)',</span><br><span class="line">        borderColor: '#ccc',       // 图例边框颜色</span><br><span class="line">        borderWidth: 0,            // 图例边框线宽，单位px，默认为0（无边框）</span><br><span class="line">        padding: 5,                // 图例内边距，单位px，默认各方向内边距为5，</span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，</span><br><span class="line">                                   <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">        itemWidth: 20,             // 图例图形宽度</span><br><span class="line">        itemHeight: 14,            // 图例图形高度</span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: '#333'          // 图例文字颜色</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 值域</span></span><br><span class="line">    dataRange: &#123;</span><br><span class="line">        orient: 'vertical',        // 布局方式，默认为垂直布局，可选为：</span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        x: 'left',                 // 水平安放位置，默认为全图左对齐，可选为：</span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: 'bottom',               // 垂直安放位置，默认为全图底部，可选为：</span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        backgroundColor: 'rgba(0,0,0,0)',</span><br><span class="line">        borderColor: '#ccc',       // 值域边框颜色</span><br><span class="line">        borderWidth: 0,            // 值域边框线宽，单位px，默认为0（无边框）</span><br><span class="line">        padding: 5,                // 值域内边距，单位px，默认各方向内边距为5，</span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，</span><br><span class="line">                                   <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">        itemWidth: 20,             // 值域图形宽度，线性渐变水平布局宽度为该值 * 10</span><br><span class="line">        itemHeight: 14,            // 值域图形高度，线性渐变垂直布局高度为该值 * 10</span><br><span class="line">        splitNumber: 5,            // 分割段数，默认为5，为0时为线性渐变</span><br><span class="line">        color:['#1e90ff','#f0ffff'],//颜色 </span><br><span class="line">        <span class="comment">//text:['高','低'],         // 文本，默认为数值文本</span></span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: '#333'          // 值域文字颜色</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    toolbox: &#123;</span><br><span class="line">        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：</span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        x: 'right',                // 水平安放位置，默认为全图右对齐，可选为：</span><br><span class="line">                                   <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：</span><br><span class="line">                                   <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                                   <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        color : ['#1e90ff','#22bb22','#4b0082','#d2691e'],</span><br><span class="line">        backgroundColor: 'rgba(0,0,0,0)', // 工具箱背景颜色</span><br><span class="line">        borderColor: '#ccc',       // 工具箱边框颜色</span><br><span class="line">        borderWidth: 0,            // 工具箱边框线宽，单位px，默认为0（无边框）</span><br><span class="line">        padding: 5,                // 工具箱内边距，单位px，默认各方向内边距为5，</span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，</span><br><span class="line">                                   <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">        itemSize: 16,              // 工具箱图形宽度</span><br><span class="line">        featureImageIcon : &#123;&#125;,     // 自定义图片icon</span><br><span class="line">        featureTitle : &#123;</span><br><span class="line">            mark : '辅助线开关',</span><br><span class="line">            markUndo : '删除辅助线',</span><br><span class="line">            markClear : '清空辅助线',</span><br><span class="line">            dataZoom : '区域缩放',</span><br><span class="line">            dataZoomReset : '区域缩放后退',</span><br><span class="line">            dataView : '数据视图',</span><br><span class="line">            lineChart : '折线图切换',</span><br><span class="line">            barChart : '柱形图切换',</span><br><span class="line">            restore : '还原',</span><br><span class="line">            saveAsImage : '保存为图片'</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提示框</span></span><br><span class="line">    tooltip: &#123;</span><br><span class="line">        trigger: 'item',           // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'</span><br><span class="line">        showDelay: 20,             // 显示延迟，添加显示延迟可以避免频繁切换，单位ms</span><br><span class="line">        hideDelay: 100,            // 隐藏延迟，单位ms</span><br><span class="line">        transitionDuration : 0.4,  // 动画变换时间，单位s</span><br><span class="line">        backgroundColor: 'rgba(0,0,0,0.7)',     // 提示背景颜色，默认为透明度为0.7的黑色</span><br><span class="line">        borderColor: '#333',       // 提示边框颜色</span><br><span class="line">        borderRadius: 4,           // 提示边框圆角，单位px，默认为4</span><br><span class="line">        borderWidth: 0,            // 提示边框线宽，单位px，默认为0（无边框）</span><br><span class="line">        padding: 5,                // 提示内边距，单位px，默认各方向内边距为5，</span><br><span class="line">                                   <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">        axisPointer : &#123;            // 坐标轴指示器，坐标轴触发有效</span><br><span class="line">            type : 'line',         // 默认为直线，可选为：'line' | 'shadow'</span><br><span class="line">            lineStyle : &#123;          // 直线指示器样式设置</span><br><span class="line">                color: '#48b',</span><br><span class="line">                width: 2,</span><br><span class="line">                type: 'solid'</span><br><span class="line">            &#125;,</span><br><span class="line">            shadowStyle : &#123;                       // 阴影指示器样式设置</span><br><span class="line">                width: 'auto',                   // 阴影大小</span><br><span class="line">                color: 'rgba(150,150,150,0.3)'  // 阴影颜色</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: '#fff'</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 区域缩放控制器</span></span><br><span class="line">    dataZoom: &#123;</span><br><span class="line">        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：</span><br><span class="line">                                   <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">        <span class="comment">// x: &#123;number&#125;,            // 水平安放位置，默认为根据grid参数适配，可选为：</span></span><br><span class="line">                                   <span class="comment">// &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">        <span class="comment">// y: &#123;number&#125;,            // 垂直安放位置，默认为根据grid参数适配，可选为：</span></span><br><span class="line">                                   <span class="comment">// &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">        <span class="comment">// width: &#123;number&#125;,        // 指定宽度，横向布局时默认为根据grid参数适配</span></span><br><span class="line">        <span class="comment">// height: &#123;number&#125;,       // 指定高度，纵向布局时默认为根据grid参数适配</span></span><br><span class="line">        backgroundColor: 'rgba(0,0,0,0)',       // 背景颜色</span><br><span class="line">        dataBackgroundColor: '#eee',            // 数据背景颜色</span><br><span class="line">        fillerColor: 'rgba(144,197,237,0.2)',   // 填充颜色</span><br><span class="line">        handleColor: 'rgba(70,130,180,0.8)'     // 手柄颜色</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 网格</span></span><br><span class="line">    grid: &#123;</span><br><span class="line">        x: 80,</span><br><span class="line">        y: 60,</span><br><span class="line">        x2: 80,</span><br><span class="line">        y2: 60,</span><br><span class="line">        <span class="comment">// width: &#123;totalWidth&#125; - x - x2,</span></span><br><span class="line">        <span class="comment">// height: &#123;totalHeight&#125; - y - y2,</span></span><br><span class="line">        backgroundColor: 'rgba(0,0,0,0)',</span><br><span class="line">        borderWidth: 1,</span><br><span class="line">        borderColor: '#ccc'</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 类目轴</span></span><br><span class="line">    categoryAxis: &#123;</span><br><span class="line">        position: 'bottom',    // 位置</span><br><span class="line">        nameLocation: 'end',   // 坐标轴名字位置，支持'start' | 'end'</span><br><span class="line">        boundaryGap: true,     // 类目起始和结束两端空白策略</span><br><span class="line">        axisLine: &#123;            // 坐标轴线</span><br><span class="line">            show: true,        // 默认显示，属性show控制显示与否</span><br><span class="line">            lineStyle: &#123;       // 属性lineStyle控制线条样式</span><br><span class="line">                color: '#48b',</span><br><span class="line">                width: 2,</span><br><span class="line">                type: 'solid'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisTick: &#123;            // 坐标轴小标记</span><br><span class="line">            show: true,       // 属性show控制显示与否，默认不显示</span><br><span class="line">            interval: 'auto',</span><br><span class="line">            <span class="comment">// onGap: null,</span></span><br><span class="line">            inside : false,    // 控制小标记是否在grid里 </span><br><span class="line">            length :5,         // 属性length控制线长</span><br><span class="line">            lineStyle: &#123;       // 属性lineStyle控制线条样式</span><br><span class="line">                color: '#333',</span><br><span class="line">                width: 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;           // 坐标轴文本标签，详见axis.axisLabel</span><br><span class="line">            show: true,</span><br><span class="line">            interval: 'auto',</span><br><span class="line">            rotate: 0,</span><br><span class="line">            margin: 8,</span><br><span class="line">            <span class="comment">// formatter: null,</span></span><br><span class="line">            textStyle: &#123;       // 其余属性默认使用全局文本样式，详见TEXTSTYLE</span><br><span class="line">                color: '#333'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitLine: &#123;           // 分隔线</span><br><span class="line">            show: true,        // 默认显示，属性show控制显示与否</span><br><span class="line">            <span class="comment">// onGap: null,</span></span><br><span class="line">            lineStyle: &#123;       // 属性lineStyle（详见lineStyle）控制线条样式</span><br><span class="line">                color: ['#ccc'],</span><br><span class="line">                width: 1,</span><br><span class="line">                type: 'solid'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitArea: &#123;           // 分隔区域</span><br><span class="line">            show: false,       // 默认不显示，属性show控制显示与否</span><br><span class="line">            <span class="comment">// onGap: null,</span></span><br><span class="line">            areaStyle: &#123;       // 属性areaStyle（详见areaStyle）控制区域样式</span><br><span class="line">                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数值型坐标轴默认参数</span></span><br><span class="line">    valueAxis: &#123;</span><br><span class="line">        position: 'left',      // 位置</span><br><span class="line">        nameLocation: 'end',   // 坐标轴名字位置，支持'start' | 'end'</span><br><span class="line">        nameTextStyle: &#123;&#125;,     // 坐标轴文字样式，默认取全局样式</span><br><span class="line">        boundaryGap: [0, 0],   // 数值起始和结束两端空白策略</span><br><span class="line">        splitNumber: 5,        // 分割段数，默认为5</span><br><span class="line">        axisLine: &#123;            // 坐标轴线</span><br><span class="line">            show: true,        // 默认显示，属性show控制显示与否</span><br><span class="line">            lineStyle: &#123;       // 属性lineStyle控制线条样式</span><br><span class="line">                color: '#48b',</span><br><span class="line">                width: 2,</span><br><span class="line">                type: 'solid'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisTick: &#123;            // 坐标轴小标记</span><br><span class="line">            show: false,       // 属性show控制显示与否，默认不显示</span><br><span class="line">            inside : false,    // 控制小标记是否在grid里 </span><br><span class="line">            length :5,         // 属性length控制线长</span><br><span class="line">            lineStyle: &#123;       // 属性lineStyle控制线条样式</span><br><span class="line">                color: '#333',</span><br><span class="line">                width: 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;           // 坐标轴文本标签，详见axis.axisLabel</span><br><span class="line">            show: true,</span><br><span class="line">            rotate: 0,</span><br><span class="line">            margin: 8,</span><br><span class="line">            <span class="comment">// formatter: null,</span></span><br><span class="line">            textStyle: &#123;       // 其余属性默认使用全局文本样式，详见TEXTSTYLE</span><br><span class="line">                color: '#333'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitLine: &#123;           // 分隔线</span><br><span class="line">            show: true,        // 默认显示，属性show控制显示与否</span><br><span class="line">            lineStyle: &#123;       // 属性lineStyle（详见lineStyle）控制线条样式</span><br><span class="line">                color: ['#ccc'],</span><br><span class="line">                width: 1,</span><br><span class="line">                type: 'solid'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitArea: &#123;           // 分隔区域</span><br><span class="line">            show: false,       // 默认不显示，属性show控制显示与否</span><br><span class="line">            areaStyle: &#123;       // 属性areaStyle（详见areaStyle）控制区域样式</span><br><span class="line">                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    polar : &#123;</span><br><span class="line">        center : ['50%', '50%'],    // 默认全局居中</span><br><span class="line">        radius : '75%',</span><br><span class="line">        startAngle : 90,</span><br><span class="line">        splitNumber : 5,</span><br><span class="line">        name : &#123;</span><br><span class="line">            show: true,</span><br><span class="line">            textStyle: &#123;       // 其余属性默认使用全局文本样式，详见TEXTSTYLE</span><br><span class="line">                color: '#333'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLine: &#123;            // 坐标轴线</span><br><span class="line">            show: true,        // 默认显示，属性show控制显示与否</span><br><span class="line">            lineStyle: &#123;       // 属性lineStyle控制线条样式</span><br><span class="line">                color: '#ccc',</span><br><span class="line">                width: 1,</span><br><span class="line">                type: 'solid'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;           // 坐标轴文本标签，详见axis.axisLabel</span><br><span class="line">            show: false,</span><br><span class="line">            textStyle: &#123;       // 其余属性默认使用全局文本样式，详见TEXTSTYLE</span><br><span class="line">                color: '#333'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitArea : &#123;</span><br><span class="line">            show : true,</span><br><span class="line">            areaStyle : &#123;</span><br><span class="line">                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        splitLine : &#123;</span><br><span class="line">            show : true,</span><br><span class="line">            lineStyle : &#123;</span><br><span class="line">                width : 1,</span><br><span class="line">                color : '#ccc'</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 柱形图默认参数</span></span><br><span class="line">    bar: &#123;</span><br><span class="line">        barMinHeight: 0,          // 最小高度改为0</span><br><span class="line">        <span class="comment">// barWidth: null,        // 默认自适应</span></span><br><span class="line">        barGap: '30%',            // 柱间距离，默认为柱形宽度的30%，可设固定值</span><br><span class="line">        barCategoryGap : '20%',   // 类目间柱形距离，默认为类目间距的20%，可设固定值</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: '各异',</span></span><br><span class="line">                barBorderColor: '#fff',       // 柱条边线</span><br><span class="line">                barBorderRadius: 0,           // 柱条边线圆角，单位px，默认为0</span><br><span class="line">                barBorderWidth: 1,            // 柱条边线线宽，单位px，默认为1</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: '各异',</span></span><br><span class="line">                barBorderColor: 'rgba(0,0,0,0)',   // 柱条边线</span><br><span class="line">                barBorderRadius: 0,                // 柱条边线圆角，单位px，默认为0</span><br><span class="line">                barBorderWidth: 1,                 // 柱条边线线宽，单位px，默认为1</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 折线图默认参数</span></span><br><span class="line">    line: &#123;</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    width: 2,</span><br><span class="line">                    type: 'solid',</span><br><span class="line">                    shadowColor : 'rgba(0,0,0,0)', //默认透明</span><br><span class="line">                    shadowBlur: 5,</span><br><span class="line">                    shadowOffsetX: 3,</span><br><span class="line">                    shadowOffsetY: 3</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//smooth : false,</span></span><br><span class="line">        <span class="comment">//symbol: null,         // 拐点图形类型</span></span><br><span class="line">        symbolSize: 2,          // 拐点图形大小</span><br><span class="line">        <span class="comment">//symbolRotate : null,  // 拐点图形旋转控制</span></span><br><span class="line">        showAllSymbol: false    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// K线图默认参数</span></span><br><span class="line">    k: &#123;</span><br><span class="line">        <span class="comment">// barWidth : null          // 默认自适应</span></span><br><span class="line">        <span class="comment">// barMaxWidth : null       // 默认自适应 </span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                color: '#fff',          // 阳线填充颜色</span><br><span class="line">                color0: '#00aa11',      // 阴线填充颜色</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    width: 1,</span><br><span class="line">                    color: '#ff3200',   // 阳线边框颜色</span><br><span class="line">                    color0: '#00aa11'   // 阴线边框颜色</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                <span class="comment">// color0: 各异</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 散点图默认参数</span></span><br><span class="line">    scatter: &#123;</span><br><span class="line">        <span class="comment">//symbol: null,      // 图形类型</span></span><br><span class="line">        symbolSize: 4,       // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span><br><span class="line">        <span class="comment">//symbolRotate : null,  // 图形旋转控制</span></span><br><span class="line">        large: false,        // 大规模散点图</span><br><span class="line">        largeThreshold: 2000,// 大规模阀值，large为true且数据量&gt;largeThreshold才启用大规模模式</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: '各异'</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                    <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 雷达图默认参数</span></span><br><span class="line">    radar : &#123;</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    width: 2,</span><br><span class="line">                    type: 'solid'</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//symbol: null,         // 拐点图形类型</span></span><br><span class="line">        symbolSize: 2           // 可计算特性参数，空数据拖拽提示图形大小</span><br><span class="line">        <span class="comment">//symbolRotate : null,  // 图形旋转控制</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 饼图默认参数</span></span><br><span class="line">    pie: &#123;</span><br><span class="line">        center : ['50%', '50%'],    // 默认全局居中</span><br><span class="line">        radius : [0, '75%'],</span><br><span class="line">        clockWise : false,          // 默认逆时针</span><br><span class="line">        startAngle: 90,</span><br><span class="line">        minAngle: 0,                // 最小角度改为0</span><br><span class="line">        selectedOffset: 10,         // 选中是扇区偏移量</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: '#fff',</span><br><span class="line">                borderWidth: 1,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: true,</span><br><span class="line">                    position: 'outer'</span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                labelLine: &#123;</span><br><span class="line">                    show: true,</span><br><span class="line">                    length: 20,</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        <span class="comment">// color: 各异,</span></span><br><span class="line">                        width: 1,</span><br><span class="line">                        type: 'solid'</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: 'rgba(0,0,0,0)',</span><br><span class="line">                borderWidth: 1,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 'outer'</span></span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                labelLine: &#123;</span><br><span class="line">                    show: false,</span><br><span class="line">                    length: 20,</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        <span class="comment">// color: 各异,</span></span><br><span class="line">                        width: 1,</span><br><span class="line">                        type: 'solid'</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    map: &#123;</span><br><span class="line">        mapType: 'china',   // 各省的mapType暂时都用中文</span><br><span class="line">        mapLocation: &#123;</span><br><span class="line">            x : 'center',</span><br><span class="line">            y : 'center'</span><br><span class="line">            <span class="comment">// width    // 自适应</span></span><br><span class="line">            <span class="comment">// height   // 自适应</span></span><br><span class="line">        &#125;,</span><br><span class="line">        showLegendSymbol : true,       // 显示图例颜色标识（系列标识的小圆点），存在legend时生效</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: '#fff',</span><br><span class="line">                borderWidth: 1,</span><br><span class="line">                areaStyle: &#123;</span><br><span class="line">                    color: '#ccc'//rgba(135,206,250,0.8)</span><br><span class="line">                &#125;,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false,</span><br><span class="line">                    textStyle: &#123;</span><br><span class="line">                        color: 'rgba(139,69,19,1)'</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;                 // 也是选中样式</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                borderColor: 'rgba(0,0,0,0)',</span><br><span class="line">                borderWidth: 1,</span><br><span class="line">                areaStyle: &#123;</span><br><span class="line">                    color: 'rgba(255,215,0,0.8)'</span><br><span class="line">                &#125;,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false,</span><br><span class="line">                    textStyle: &#123;</span><br><span class="line">                        color: 'rgba(139,69,19,1)'</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    force : &#123;</span><br><span class="line">        <span class="comment">// 数据map到圆的半径的最小值和最大值</span></span><br><span class="line">        minRadius : 10,</span><br><span class="line">        maxRadius : 20,</span><br><span class="line">        density : 1.0,</span><br><span class="line">        attractiveness : 1.0,</span><br><span class="line">        <span class="comment">// 初始化的随机大小位置</span></span><br><span class="line">        initSize : 300,</span><br><span class="line">        <span class="comment">// 向心力因子，越大向心力越大</span></span><br><span class="line">        centripetal : 1,</span><br><span class="line">        <span class="comment">// 冷却因子</span></span><br><span class="line">        coolDown : 0.99,</span><br><span class="line">        <span class="comment">// 分类里如果有样式会覆盖节点默认样式</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                nodeStyle : &#123;</span><br><span class="line">                    brushType : 'both',</span><br><span class="line">                    color : '#f08c2e',</span><br><span class="line">                    strokeColor : '#5182ab'</span><br><span class="line">                &#125;,</span><br><span class="line">                linkStyle : &#123;</span><br><span class="line">                    strokeColor : '#5182ab'</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                nodeStyle : &#123;&#125;,</span><br><span class="line">                linkStyle : &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    chord : &#123;</span><br><span class="line">        radius : ['65%', '75%'],</span><br><span class="line">        center : ['50%', '50%'],</span><br><span class="line">        padding : 2,</span><br><span class="line">        sort : 'none', // can be 'none', 'ascending', 'descending'</span><br><span class="line">        sortSub : 'none', // can be 'none', 'ascending', 'descending'</span><br><span class="line">        startAngle : 90,</span><br><span class="line">        clockWise : false,</span><br><span class="line">        showScale : false,</span><br><span class="line">        showScaleText : false,</span><br><span class="line">        itemStyle : &#123;</span><br><span class="line">            normal : &#123;</span><br><span class="line">                label : &#123;</span><br><span class="line">                    show : true</span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle : &#123;</span><br><span class="line">                    width : 0,</span><br><span class="line">                    color : '#000'</span><br><span class="line">                &#125;,</span><br><span class="line">                chordStyle : &#123;</span><br><span class="line">                    lineStyle : &#123;</span><br><span class="line">                        width : 1,</span><br><span class="line">                        color : '#666'</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis : &#123;</span><br><span class="line">                lineStyle : &#123;</span><br><span class="line">                    width : 0,</span><br><span class="line">                    color : '#000'</span><br><span class="line">                &#125;,</span><br><span class="line">                chordStyle : &#123;</span><br><span class="line">                    lineStyle : &#123;</span><br><span class="line">                        width : 2,</span><br><span class="line">                        color : '#333'</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    island: &#123;</span><br><span class="line">        r: 15,</span><br><span class="line">        calculateStep: 0.1  // 滚轮可计算步长 0.1 = 10%</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    markPoint : &#123;</span><br><span class="line">        symbol: 'pin',         // 标注类型</span><br><span class="line">        symbolSize: 10,        // 标注大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span><br><span class="line">        <span class="comment">//symbolRotate : null, // 标注旋转控制</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异，</span></span><br><span class="line">                <span class="comment">// borderColor: 各异,     // 标注边线颜色，优先于color </span></span><br><span class="line">                borderWidth: 2,            // 标注边线线宽，单位px，默认为1</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: true,</span><br><span class="line">                    position: 'inside' // 可选为'left'|'right'|'top'|'bottom'</span><br><span class="line">                    <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: true</span><br><span class="line">                    <span class="comment">// position: 'inside'  // 'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null     // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    markLine : &#123;</span><br><span class="line">        <span class="comment">// 标线起始和结束的symbol介绍类型，如果都一样，可以直接传string</span></span><br><span class="line">        symbol: ['circle', 'arrow'],  </span><br><span class="line">        <span class="comment">// 标线起始和结束的symbol大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span></span><br><span class="line">        symbolSize: [2, 4],</span><br><span class="line">        <span class="comment">// 标线起始和结束的symbol旋转控制</span></span><br><span class="line">        <span class="comment">//symbolRotate : null,</span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                <span class="comment">// color: 各异,           // 标线主色，线色，symbol主色</span></span><br><span class="line">                <span class="comment">// borderColor: 随color,     // 标线symbol边框颜色，优先于color </span></span><br><span class="line">                borderWidth: 2,          // 标线symbol边框线宽，单位px，默认为2</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false,</span><br><span class="line">                    <span class="comment">// 可选为 'start'|'end'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    position: 'inside',  </span><br><span class="line">                    textStyle: &#123;         // 默认使用全局文本样式，详见TEXTSTYLE</span><br><span class="line">                        color: '#333'</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    <span class="comment">// color: 随borderColor, // 主色，线色，优先级高于borderColor和color</span></span><br><span class="line">                    <span class="comment">// width: 随borderWidth, // 优先于borderWidth</span></span><br><span class="line">                    type: 'solid',</span><br><span class="line">                    shadowColor : 'rgba(0,0,0,0)', //默认透明</span><br><span class="line">                    shadowBlur: 5,</span><br><span class="line">                    shadowOffsetX: 3,</span><br><span class="line">                    shadowOffsetY: 3</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line">                <span class="comment">// color: 各异</span></span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: false</span><br><span class="line">                    <span class="comment">// position: 'inside' // 'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                    <span class="comment">// textStyle: null    // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle : &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    textStyle: &#123;</span><br><span class="line">        decoration: 'none',</span><br><span class="line">        fontFamily: 'Arial, Verdana, sans-serif',</span><br><span class="line">        fontFamily2: '微软雅黑',    // IE8- 字体模糊并且不支持不同字体混排，额外指定一份</span><br><span class="line">        fontSize: 12,</span><br><span class="line">        fontStyle: 'normal',</span><br><span class="line">        fontWeight: 'normal'</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认标志图形类型列表</span></span><br><span class="line">    symbolList : [</span><br><span class="line">      'circle', 'rectangle', 'triangle', 'diamond',</span><br><span class="line">      'emptyCircle', 'emptyRectangle', 'emptyTriangle', 'emptyDiamond'</span><br><span class="line">    ],</span><br><span class="line">    loadingText : 'Loading...',</span><br><span class="line">    <span class="comment">// 可计算特性配置，孤岛，提示颜色</span></span><br><span class="line">    calculable: false,              // 默认关闭可计算特性</span><br><span class="line">    calculableColor: 'rgba(255,165,0,0.6)',       // 拖拽提示边框颜色</span><br><span class="line">    calculableHolderColor: '#ccc', // 可计算占位提示颜色</span><br><span class="line">    nameConnector: ' &amp; ',</span><br><span class="line">    valueConnector: ' : ',</span><br><span class="line">    animation: true,</span><br><span class="line">    animationThreshold: 2500,       // 动画元素阀值，产生的图形原素超过2500不出动画</span><br><span class="line">    addDataAnimation: true,         // 动态数据接口是否开启动画效果</span><br><span class="line">    animationDuration: 2000,</span><br><span class="line">    animationEasing: 'ExponentialOut'    //BounceOut</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>前端插件使用</category>
      </categories>
  </entry>
  <entry>
    <title>var关于变量提升</title>
    <url>/2020/03/24/var%E5%85%B3%E4%BA%8E%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</url>
    <content><![CDATA[<p>转载来自：</p>
<p>作者：颠倒的黑白<br>链接：<a href="https://www.jianshu.com/p/184cb2075d16" target="_blank" rel="noopener">https://www.jianshu.com/p/184cb2075d16</a><br>来源：简书</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(a === <span class="literal">undefined</span>);</span><br><span class="line">a=<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log([a,i]);</span><br><span class="line">  <span class="keyword">var</span> a=<span class="number">20</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;a;i++) &#123;</span><br><span class="line">    <span class="comment">//do</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log([a,i])</span><br><span class="line">&#125;</span><br><span class="line">foo();</span><br></pre></td></tr></table></figure></div>

<p>输出结果</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span></span><br><span class="line">[<span class="meta">undefined, undefined</span>]</span><br><span class="line">[<span class="meta">20, 20</span>]</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>JavaScript引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。这造成的结果，就是所有的变量的声明语句，都会被提升到代码的头部，这就叫做变量提升（hoisting）。</p>
</blockquote>
<p>例子</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">var</span> a =<span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>

<p>以上语句并不会报错，只是提示undefined。实际运行过程：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">a =<span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>

<p>表示变量a已声明，但还未赋值。但是变量提升只对var命令声明的变量有效，如果一个变量不是用var命令声明的，就不会发生变量提升。</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">console.<span class="built_in">log</span>(aa);</span><br><span class="line">aa =<span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>

<p>以上代码将会报错:ReferenceError: aa is not defined.</p>
<p>与普通变量一样，js里的function也可看做变量，也存在变量提升情况：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">a();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>

<p>表面上，上面代码好像在声明之前就调用了函数a。但是实际上，由于“变量提升”，函数a定义部分被提升到了代码头部，也就是在调用之前已经声明了。但是，如果采用赋值语句定义函数，JavaScript就会报错：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">a();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TypeError: a is not a function</span></span><br></pre></td></tr></table></figure></div>

<p>因为，实际运行过程：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">jsx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line">a();</span><br><span class="line">a = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>

<p>这时候a是个变量，并非function。</p>
]]></content>
      <categories>
        <category>ES6</category>
      </categories>
  </entry>
  <entry>
    <title>分页插件的使用</title>
    <url>/2020/03/24/%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>Bootstrap Paginator是一款基于Bootstrap的js分页插件，功能很丰富，个人觉得这款插件已经无可挑剔了。它提供了一系列的参数用来支持用户的定制，提供了公共的方法可随时获得插件状态的改变，以及事件来监听用户的动作。目前经过测试的浏览器包括： Firefox 5+, Chrome 14+, Safari 5+, Opera 11.6+ and IE 7+。</p>
<p>GitHub 官网地址：<a href="https://github.com/lyonlai/bootstrap-paginator" target="_blank" rel="noopener">https://github.com/lyonlai/bootstrap-paginator</a></p>
<p><strong><em>\</em>参数介绍：**</strong></p>
<table>
<thead>
<tr>
<th><strong><em>\</em>参数名**</strong></th>
<th><strong><em>\</em>数据类型**</strong></th>
<th><strong><em>\</em>默认值**</strong></th>
<th><strong><em>\</em>描述**</strong></th>
</tr>
</thead>
<tbody><tr>
<td>bootstrapMajorVersion</td>
<td>number</td>
<td>2</td>
<td>搭配使用的Bootstrap版本，2.X 的 分页必须使用div元素，3.X分页的必须使用ul元素。请注意与所使用的bootstrap版本对应上。</td>
</tr>
<tr>
<td>size</td>
<td>string</td>
<td>“normal”</td>
<td>设置控件的显示大小，是个字符串. 允许的值: <strong>mini</strong>, <strong>small</strong>, <strong>normal</strong>,<strong>large。</strong>值：mini版的、小号的、正常的、大号的。</td>
</tr>
<tr>
<td>alignment</td>
<td>string</td>
<td>“left”</td>
<td>设置控件的对齐方式，是个字符串， 允许的值用： <strong>left</strong>, <strong>center</strong> and<strong>right</strong>. 即：左对齐、居中对齐、右对齐。</td>
</tr>
<tr>
<td>itemContainerClass</td>
<td>function</td>
<td></td>
<td>该参数接收一个函数，返回一个字符串，该字符串是一个我们自定义的class类样式。当控件内的每个操纵按钮被渲染(render)时，都会调用该函数，同时把有关该按钮的信息作为参数传入。参数：<strong>*\</strong>type*<em>**</em>,<strong>*\</strong>page*<em>**</em>, <strong>*\</strong>current*<em>**</em> 。<strong>*\</strong>type*<em>**</em>为该控件的操作按钮的类型，如上图所示的五种类型：first、prev、page、next、last。<strong>*\</strong>page*<em>**</em>为该按钮所属第几页。<strong>*\</strong>current*<em>**</em> 指示整个控件的当前页是第几页。</td>
</tr>
<tr>
<td>currentPage</td>
<td>number</td>
<td>1</td>
<td>设置当前页.</td>
</tr>
<tr>
<td>numberOfPages</td>
<td>number</td>
<td>5</td>
<td>设置控件显示的页码数.即：类型为”page”的操作按钮的数量。</td>
</tr>
<tr>
<td>totalPages</td>
<td>number</td>
<td>1</td>
<td>设置总页数.</td>
</tr>
<tr>
<td>pageUrl</td>
<td>function</td>
<td></td>
<td>实际上，控件内的每个操作按钮最终会被渲染成超链接，该参数的作用就是设置超链接的链接地址。该参数是个函数，参数为：<strong>*\</strong>type*<em>**</em>,<strong>*\</strong>page*<em>**</em>, <strong>*\</strong>current。*<em>**</em>这样我们就可以通过这个函数为每个操作按钮动态设置链接地址。如：”<a href="http://example.com/list/page/&quot;+page" target="_blank" rel="noopener">http://example.com/list/page/&quot;+page</a></td>
</tr>
<tr>
<td>shouldShowPage</td>
<td>boolean/function</td>
<td>true</td>
<td>该参数用于设置某个操作按钮是否显示，可是个布尔值也可是个函数。当为true时，显示。当为false时，不显示。如果该参数是个函数，需要返回个布尔值，通过这个返回值判断是否显示。函数有3个参数: <strong>*\</strong>type*<em>**</em>, <strong>*\</strong>page*<em>**</em>, <strong>*\</strong>current。*<em>**</em>使用函数的好处是，可以对每个操作按钮进行显示控制。</td>
</tr>
<tr>
<td>itemTexts</td>
<td>function</td>
<td></td>
<td>控制每个操作按钮的显示文字。是个函数，有3个参数: <strong>*\</strong>type*<em>**</em>, <strong>*\</strong>page*<em>**</em>, <strong>*\</strong>current。*<em>**</em>通过这个参数我们就可以将操作按钮上的英文改为中文，如first–&gt;首页，last–&gt;尾页。</td>
</tr>
<tr>
<td>tooltipTitles</td>
<td>function</td>
<td></td>
<td>设置操作按钮的title属性。是个函数，有3个参数: <strong>*\</strong>type*<em>**</em>, <strong>*\</strong>page*<em>**</em>, <strong>*\</strong>current。*<em>**</em></td>
</tr>
<tr>
<td>useBootstrapTooltip</td>
<td>boolean</td>
<td>false</td>
<td>设置是否使用Bootstrap内置的tooltip。 true是使用，false是不使用,默认是不使用。注意：如果使用，则需要引入bootstrap-tooltip.js插件。</td>
</tr>
<tr>
<td>bootstrapTooltipOptions</td>
<td>object</td>
<td></td>
<td>Default:  {    animation: true,    html: true,    placement: ‘top’,    selector: false,    title: “”,    container: false }该参数是个js对象。当参数useBootstrapTooltip为true时，会将该对象传给Bootstrap的bootstrap-tooltip.js插件。</td>
</tr>
<tr>
<td>onPageClicked</td>
<td>function</td>
<td></td>
<td>为操作按钮绑定click事件。回调函数的参数：<strong>*\</strong>event*<em>**</em>, <strong>*\</strong>originalEvent*<em>**</em>, <strong>*\</strong>type*<em>**</em>,<strong>*\</strong>page。*<em>**</em></td>
</tr>
<tr>
<td>onPageChanged</td>
<td>function</td>
<td></td>
<td>为操作按钮绑定页码改变事件，回调函数的参数：<strong>*\</strong>event*<em>**</em>, <strong>*\</strong>oldPage*<em>**</em>, <strong>*\</strong>newPage。*<em>**</em></td>
</tr>
</tbody></table>
<p><strong><em>\</em>公共命令：**</strong></p>
<p>另外该插件还提供了几个公共的命令，可以通过如下方法调用，如：$(‘#example’).bootstrapPaginator(“show”,3) 调用show命令、$(‘#example’).bootstrapPaginator(“getPages”) 调用getPages命令。</p>
<table>
<thead>
<tr>
<th><strong><em>\</em>命令名**</strong></th>
<th><strong><em>\</em>参数**</strong></th>
<th><strong><em>\</em>返回值**</strong></th>
<th><strong><em>\</em>描述**</strong></th>
</tr>
</thead>
<tbody><tr>
<td>show</td>
<td>page</td>
<td></td>
<td><strong><em>\</em>show**</strong>命令用于直接跳转到特定的page，与直接点击操作按钮的效果是一样的。使用方法，如：$(‘#example’).bootstrapPaginator(“show”,3) 直接跳转到第3页，$(‘#example’).bootstrapPaginator(“show”,100)直接跳转到100页。</td>
</tr>
<tr>
<td>showFirst</td>
<td></td>
<td></td>
<td><strong><em>\</em>showFirst**</strong> 命令用于直接跳转到首页，与点击first按钮相同。使用方法：$(‘#example’).bootstrapPaginator(“showFirst”)</td>
</tr>
<tr>
<td>showPrevious</td>
<td></td>
<td></td>
<td><strong><em>\</em>showPrevious**</strong> 命令用于直接跳转到上一页。使用方法：$(‘#example’).bootstrapPaginator(“showPrevious”)</td>
</tr>
<tr>
<td>showNext</td>
<td></td>
<td></td>
<td><strong><em>\</em>showNext**</strong>命令用于直接跳转到下一页。</td>
</tr>
<tr>
<td>showLast</td>
<td></td>
<td></td>
<td><strong><em>\</em>showLast**</strong> 命令用于直接跳转到上一页。</td>
</tr>
<tr>
<td>getPages</td>
<td></td>
<td><strong>object</strong></td>
<td><strong><em>\</em>getPages**</strong>命令用于返回当前控件中显示的页码，以数组形式返回。使用方法：var arra = $(‘#example’).bootstrapPaginator(“getPages”)</td>
</tr>
<tr>
<td>setOptions</td>
<td><strong>object</strong></td>
<td></td>
<td><strong><em>\</em>setOptions**</strong> 命令用于重新设置参数，使用方法：$(‘#example’).bootstrapPaginator(“setOptions”,newoptions)</td>
</tr>
</tbody></table>
<p><strong><em>\</em>事件Events：**</strong></p>
<p>Bootstrap Paginator 提供了俩个事件：<strong>page-clicked</strong>和<strong>page-changed</strong>。这俩个事件作为参数使用，分别对应<strong>onPageClicked</strong>和<strong>onPageChanged</strong>。</p>
<table>
<thead>
<tr>
<th><strong><em>\</em>事件名**</strong></th>
<th><strong><em>\</em>回调函数**</strong></th>
<th><strong><em>\</em>描述**</strong></th>
</tr>
</thead>
<tbody><tr>
<td>page-clicked</td>
<td>function(<strong>event</strong>, <strong>originalEvent</strong>, <strong>type</strong>, <strong>page</strong>)</td>
<td>同上文。另外，参数<strong>event</strong>, <strong>originalEvent是俩个jquery事件对象，可参考jquery相关文档</strong></td>
</tr>
<tr>
<td>page-changed</td>
<td>function(<strong>event</strong>, <strong>oldPage</strong>, <strong>newPage</strong>)</td>
<td>同上文</td>
</tr>
</tbody></table>
<p><strong><em>\</em>Demo 示例：**</strong></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tr><td class="code"><pre><span class="line">            $(<span class="string">'tbody'</span>).html(template(<span class="string">"list"</span>,data));</span><br><span class="line">            <span class="comment">// 初始化分页组件</span></span><br><span class="line">            $(<span class="string">".pagination"</span>).bootstrapPaginator(&#123;</span><br><span class="line">                <span class="comment">// 对饮的bootstrap版本</span></span><br><span class="line">                bootstrapMajorVersion: <span class="number">3</span>,</span><br><span class="line">                <span class="comment">// 分页按钮的大小</span></span><br><span class="line">                size : <span class="string">"small"</span>,</span><br><span class="line">                <span class="comment">//当前页码</span></span><br><span class="line">                currentPage: data.page,</span><br><span class="line">                <span class="comment">//当前页的总数 一共多少页</span></span><br><span class="line">                totalPages: <span class="built_in">Math</span>.ceil(data.total/data.size),</span><br><span class="line">                <span class="comment">//按钮的页码数量 默认5个</span></span><br><span class="line">                numberOfPage: <span class="number">3</span>,</span><br><span class="line">                <span class="comment">// 点击页码渲染</span></span><br><span class="line">                <span class="comment">// 监听按钮的事件  获取点击的页码</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 2.分页展示</span></span><br><span class="line">                onPageClicked: <span class="function"><span class="keyword">function</span>(<span class="params">event,originalEvent,type,page</span>)</span>&#123;</span><br><span class="line">                    <span class="comment">// 1.event Jquery的事件对象</span></span><br><span class="line">                    <span class="comment">// 2.originalEvent 原生dom的事件对象</span></span><br><span class="line">                    <span class="comment">// 3.type 按钮的类型</span></span><br><span class="line">                    <span class="comment">// 4.page 按钮对象的页码</span></span><br><span class="line">                    <span class="built_in">window</span>.page = page;</span><br><span class="line">                    render()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">## 此例子需要在外层包含ajax获取的数据data传入的函数</span><br></pre></td></tr></table></figure></div>



<a href="/2020/03/24/%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/wps1.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/24/%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/wps1.png" class="lazyload"></a>

 <a href="/2020/03/24/%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/wps2.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/24/%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/wps2.png" class="lazyload"></a>

<p>注意：分页样式用BootStrap 的，如果单独使用，请去BootStrap中把分页样式拷出来。jQuery版本需要1.8及以上。</p>
]]></content>
      <categories>
        <category>前端插件使用</category>
      </categories>
  </entry>
  <entry>
    <title>bootstrapValidator的使用</title>
    <url>/2020/03/20/bootstrapValidator%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="1、Bootstrap：Form-表单"><a href="#1、Bootstrap：Form-表单" class="headerlink" title="1、Bootstrap：Form 表单"></a>1、Bootstrap：Form 表单</h2><p>在WEB开发过程中，经常遇到需要做表单提交，良好的提示增加用户体验感。在Bootstrap UI使用表单验证，构建登录界面。</p>
<div class="container">
    <div class="col-md-4 col-md-offset-4">
        <div class="panel panel-primary mt_150">
            <div class="panel-heading text-center"><h4>后台管理系统</h4></div>
            <div class="panel-body">
                <form id="login" class="form-horizontal" autocomplete="off">
                    <div class="form-group">
                        <label for="inputUserName3" class="col-sm-3 control-label">用户名</label>
                        <div class="col-sm-9">
                            <input name="username" type="text" class="form-control" id="inputUserName3" placeholder="请输入用户名">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputPassword3" class="col-sm-3 control-label">密码</label>
                        <div class="col-sm-9">
                            <input name="password" type="password" class="form-control" id="inputPassword3" placeholder="请输入密码">
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-3 col-sm-10">
                            <button type="reset" class="btn btn-default mr_50">重置</button>
                            <button type="submit" class="btn btn-primary">登录</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<h2 id="2、Bootstrap：引用相关JS和CSS"><a href="#2、Bootstrap：引用相关JS和CSS" class="headerlink" title="2、Bootstrap：引用相关JS和CSS"></a>2、Bootstrap：引用相关JS和CSS</h2><p>以下路径自行修改：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"assets/jquery/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"assets/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"assets/bootstrap-validator/js/bootstrapValidator.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"assets/bootstrap/css/bootstrap.min.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"assets/bootstrap-validator/css/bootstrapValidator.min.css"</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="3、Bootstrap：Html添加Form表单"><a href="#3、Bootstrap：Html添加Form表单" class="headerlink" title="3、Bootstrap：Html添加Form表单"></a>3、Bootstrap：Html添加Form表单</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-4"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary mt_150"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading text-center"</span>&gt;</span><span class="tag">&lt;<span class="name">h4</span>&gt;</span>后台管理系统<span class="tag">&lt;/<span class="name">h4</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"login"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"inputUserName3"</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-9"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"inputUserName3"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"inputPassword3"</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-9"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"inputPassword3"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-offset-3 col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">class</span>=<span class="string">"btn btn-default mr_50"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">注： css样式自行调试，结构如此就行</span><br></pre></td></tr></table></figure></div>



<h2 id="4、Bootstrap：添加bootstrapValidator-自定义验证"><a href="#4、Bootstrap：添加bootstrapValidator-自定义验证" class="headerlink" title="4、Bootstrap：添加bootstrapValidator 自定义验证"></a>4、Bootstrap：添加bootstrapValidator 自定义验证</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//初始化校验插件</span></span><br><span class="line">    <span class="comment">//1.是form表单的结构 并且有一个提交按钮</span></span><br><span class="line">    <span class="comment">// 2.插件就是一个jQuery插件  样式和bootstrap风格一致</span></span><br><span class="line">    $(<span class="string">"#login"</span>).bootstrapValidator(&#123;</span><br><span class="line">        <span class="comment">// 配置校验的不同校验下的图标</span></span><br><span class="line">        feedbackIcons : &#123;</span><br><span class="line">            valid: <span class="string">"glyphicon glyphicon-ok"</span>,</span><br><span class="line">            invalid: <span class="string">"glyphicon glyphicon-remove"</span>,</span><br><span class="line">            validating: <span class="string">"glyphicon glyphicon-refresh"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 需要校验的表单元素</span></span><br><span class="line">        fields: &#123;</span><br><span class="line">            <span class="comment">// 对应表单元素的name</span></span><br><span class="line">            username: &#123;</span><br><span class="line">                <span class="comment">// 校验规则，多个校验规则</span></span><br><span class="line">                validators:&#123;</span><br><span class="line">                    notEmpty: &#123;</span><br><span class="line">                        message: <span class="string">"用户名不能为空"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="comment">//配置一个后台校验规则</span></span><br><span class="line">                    callback :&#123;</span><br><span class="line">                        message : <span class="string">"用户名不存在"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            password: &#123;</span><br><span class="line">                validators: &#123;</span><br><span class="line">                    notEmpty: &#123;</span><br><span class="line">                        message: <span class="string">"密码不能为空"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    stringLength: &#123;</span><br><span class="line">                        min:<span class="number">6</span>,</span><br><span class="line">                        max:<span class="number">18</span>,</span><br><span class="line">                        message: <span class="string">"密码必须是6-18个字符"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    callback: &#123;</span><br><span class="line">                        message : <span class="string">"密码错误"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).on(<span class="string">"success.form.bv"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 校验成功的时候触发</span></span><br><span class="line">        <span class="comment">// 阻止表单的默认提交  使用ajax提交</span></span><br><span class="line">        e.preventDefault();</span><br><span class="line">        <span class="keyword">var</span> $form=$(e.target);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify($form.serialize()))</span><br><span class="line">        <span class="comment">// ajax 后台校验用户名和密码</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"post"</span>,</span><br><span class="line">            url: <span class="string">"/employee/employeeLogin"</span>,</span><br><span class="line">            data: $form.serialize(),</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(data.success == <span class="literal">true</span>)&#123;</span><br><span class="line">                    <span class="comment">// 跳转后台的首页</span></span><br><span class="line">                    location.href = <span class="string">"/admin/"</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(data.error == <span class="number">1000</span>)&#123;</span><br><span class="line">                        <span class="comment">//用户名错误</span></span><br><span class="line">                        <span class="comment">// 设置用户名这个表单元素的状态为失败</span></span><br><span class="line">                        <span class="comment">// 获取校验组件</span></span><br><span class="line">                        <span class="comment">/**</span></span><br><span class="line"><span class="comment">                         * 1.获取教研组间</span></span><br><span class="line"><span class="comment">                         * 2.调用更改状态的函数</span></span><br><span class="line"><span class="comment">                         * 3.校验表单，改成什么状态，使用哪个校验规则</span></span><br><span class="line"><span class="comment">                         */</span></span><br><span class="line">                        $form.data(<span class="string">"bootstrapValidator"</span>).updateStatus(<span class="string">"username"</span>,<span class="string">"INVALID"</span>,<span class="string">"callback"</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.error == <span class="number">1001</span>)&#123;</span><br><span class="line">                        <span class="comment">//用户密码错误</span></span><br><span class="line">                       $form.data(<span class="string">'bootstrapValidator'</span>).updateStatus(<span class="string">'password'</span>,<span class="string">'INVALID'</span>,<span class="string">'callback'</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>

<h2 id="5、Bootstrap：Form表单验证效果"><a href="#5、Bootstrap：Form表单验证效果" class="headerlink" title="5、Bootstrap：Form表单验证效果"></a>5、Bootstrap：Form表单验证效果</h2><a href="/2020/03/20/bootstrapValidator%E7%9A%84%E4%BD%BF%E7%94%A8/image-20200318215454116.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/20/bootstrapValidator%E7%9A%84%E4%BD%BF%E7%94%A8/image-20200318215454116.png" class="lazyload"></a>

]]></content>
      <categories>
        <category>前端插件使用</category>
      </categories>
  </entry>
  <entry>
    <title>cent os升级python3.7</title>
    <url>/2020/03/17/cent-os%E5%8D%87%E7%BA%A7python3-7/</url>
    <content><![CDATA[<h2 id="查看一下当前python的版本"><a href="#查看一下当前python的版本" class="headerlink" title="查看一下当前python的版本"></a>查看一下当前python的版本</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis python</span><br></pre></td></tr></table></figure></div>

<h2 id="下载python"><a href="#下载python" class="headerlink" title="下载python"></a>下载python</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz</span><br></pre></td></tr></table></figure></div>

<h2 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf Python-3.7.3.tgz</span><br></pre></td></tr></table></figure></div>

<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y openssl-devel openssl-static zlib-devel lzma tk-devel xz-devel bzip2-devel ncurses-devel gdbm-devel readline-devel sqlite-devel gcc libffi-devel</span><br></pre></td></tr></table></figure></div>

<h2 id="将解压文件夹移至-usr-local"><a href="#将解压文件夹移至-usr-local" class="headerlink" title="将解压文件夹移至  /usr/local"></a>将解压文件夹移至  /usr/local</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv Python-3.7.3 /usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure></div>

<h2 id="进入python3-7目录"><a href="#进入python3-7目录" class="headerlink" title="进入python3.7目录"></a>进入python3.7目录</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Python-3.7.3</span><br></pre></td></tr></table></figure></div>

<h2 id="执行配置文件"><a href="#执行配置文件" class="headerlink" title="执行配置文件"></a>执行配置文件</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure></div>

<h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></div>

<h2 id="创建软连接"><a href="#创建软连接" class="headerlink" title="创建软连接"></a>创建软连接</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/Python-3.7.3/python /usr/bin/python3</span><br></pre></td></tr></table></figure></div>

<h2 id="进入python-pip3"><a href="#进入python-pip3" class="headerlink" title="进入python pip3"></a>进入python pip3</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3</span><br></pre></td></tr></table></figure></div>

<h2 id="pip3安装模块"><a href="#pip3安装模块" class="headerlink" title="pip3安装模块"></a>pip3安装模块</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install model-name --user</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>开发环境</category>
      </categories>
  </entry>
  <entry>
    <title>MongoDB分片式复制集的配置安装</title>
    <url>/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="复制集安装准备"><a href="#复制集安装准备" class="headerlink" title="复制集安装准备"></a>复制集安装准备</h2><ul>
<li><p>确认本机已安装MongoDB，并且设置好MongoDB环境变量</p>
</li>
<li><p>若没安装，请自行询问度娘：MongoDB安装</p>
</li>
</ul>
<h2 id="创建相应的文件夹"><a href="#创建相应的文件夹" class="headerlink" title="创建相应的文件夹"></a>创建相应的文件夹</h2><p>本次配置包含以下内容：</p>
<ul>
<li><p>包含三个分片集，每个分片集由一个主节点、一个从节点和一个仲裁节点组成</p>
</li>
<li><p>配置集（config servers）包含三个节点</p>
</li>
<li><p>路由集（mongos）包含两个节点</p>
</li>
</ul>
<p>创建的文件夹为：</p>
<ul>
<li>主目录：</li>
</ul>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111108342.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111108342.png" class="lazyload"></a>

<ul>
<li>分片集：（主节点，从节点，仲裁节点各一个文件夹）</li>
</ul>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111148167.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111148167.png" class="lazyload"></a>

<p>每一个节点的配置为：  data文件夹      config文件  logs.log文件</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318115925889.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318115925889.png" class="lazyload"></a>

<ul>
<li>配置集：</li>
</ul>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111608882.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111608882.png" class="lazyload"></a>

<p>每一个节点的配置为：  data文件夹      config文件  logs.log文件</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318115925889.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318115925889.png" class="lazyload"></a>

<ul>
<li>路由集</li>
</ul>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111806535.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318111806535.png" class="lazyload"></a>

<p>每一个节点的配置为：  config文件  logs.log文件</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318120003197.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318120003197.png" class="lazyload"></a>

<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">分片集配置项及其含义：</span><br><span class="line"></span><br><span class="line">dbpath&#x3D;数据的存放目录</span><br><span class="line"></span><br><span class="line">logpath&#x3D;日志文件的路径</span><br><span class="line"></span><br><span class="line">port&#x3D;mongod服务的端口</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;是否为分片集节点（true为是）</span><br><span class="line"></span><br><span class="line">replSet&#x3D;节点集唯一标识</span><br><span class="line"></span><br><span class="line">logappend&#x3D;是否以追加的形式书写日志</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;操作日志的大小</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;存储引擎</span><br></pre></td></tr></table></figure></div>

<h2 id="具体配置如下"><a href="#具体配置如下" class="headerlink" title="具体配置如下"></a>具体配置如下</h2><p><strong>l</strong> <strong><em>\</em>书写各节点的配置文件**</strong></p>
<p> （下文中配置为绝对路径，也可采用相对路径。如不理解，采用绝对路径）</p>
<ul>
<li>分片集wutb_sharda、节点wutb_sharda_master配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_master\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_master\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;11624</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_sharda</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>

<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps1.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps1.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_sharda、节点wutb_sharda_slave配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_slave\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_slave\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;11625</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_sharda</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>

<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps2.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps2.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_sharda、节点wutb_sharda_arbiter配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_arbiter\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_arbiter\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;11623</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_sharda</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps3.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps3.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_shardb、节点wutb_sharda_slave配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_slave\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_slave\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;21625</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_shardb</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps4.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps4.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_shardb、节点wutb_shardb_master配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_master\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_master\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;21624</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_shardb</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps5.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps5.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_shardb、节点wutb_shardb_arbiter配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_arbiter\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_arbiter\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;21623</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_shardb</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps6.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps6.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_shardc、节点wutb_shardc_arbiter配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_arbiter\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_arbiter\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;31623</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_shardc</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps7.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps7.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_shardc、节点wutb_shardc_master配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_master\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_master\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;31624</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_shardc</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps8.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps8.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_shardc、节点wutb_shardc_slave配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_slave\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_slave\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;31625</span><br><span class="line"></span><br><span class="line">shardsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_shardc</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<p>MongoDB分片式复制集的配置安装\wps9.jpg) </p>
<ul>
<li>配置集wutb_configs、节点wutb_configs_a配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_a\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_a\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;41624</span><br><span class="line"></span><br><span class="line">configsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_configs</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps10.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps10.jpg" class="lazyload"></a>

<ul>
<li>配置集wutb_configs、节点wutb_configs_b配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_b\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_b\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;41625</span><br><span class="line"></span><br><span class="line">configsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_configs</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps11.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps11.jpg" class="lazyload"></a>

<ul>
<li>分片集wutb_configs、节点wutb_configs_c配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_c\data</span><br><span class="line"></span><br><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_c\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;41626</span><br><span class="line"></span><br><span class="line">configsvr&#x3D;true</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">oplogSize&#x3D;2048</span><br><span class="line"></span><br><span class="line">storageEngine&#x3D;wiredTiger</span><br><span class="line"></span><br><span class="line">replSet&#x3D;wutb_configs</span><br></pre></td></tr></table></figure></div>

<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps12.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps12.jpg" class="lazyload"></a>

<ul>
<li>路由集wutb_mongos、节点wutb_mongos_a配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_mongos\wutb_mongos_a\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;51624</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">configdb&#x3D;wutb_configs&#x2F;127.0.0.1:41624,127.0.0.1:41625,127.0.0.1:41626</span><br></pre></td></tr></table></figure></div>



<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps13.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps13.jpg" class="lazyload"></a>

<ul>
<li>路由集wutb_mongos、节点wutb_mongos_b配置项和截图：</li>
</ul>
<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">logpath&#x3D;G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_mongos\wutb_mongos_b\logs.log</span><br><span class="line"></span><br><span class="line">port&#x3D;51625</span><br><span class="line"></span><br><span class="line">logappend&#x3D;true</span><br><span class="line"></span><br><span class="line">configdb&#x3D;wutb_configs&#x2F;127.0.0.1:41624,127.0.0.1:41625,127.0.0.1:41626</span><br></pre></td></tr></table></figure></div>

<p>截图：</p>
<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps14.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps14.jpg" class="lazyload"></a>

<h2 id="启动各分片服务器"><a href="#启动各分片服务器" class="headerlink" title="启动各分片服务器"></a>启动各分片服务器</h2><p>新建  .bat  windows批量处理文件</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rem 启动分片a</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_arbiter\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_master\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_sharda\wutb_sharda_slave\config</span><br><span class="line"></span><br><span class="line">rem 启动分片b</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_arbiter\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_master\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardb\wutb_shardb_slave\config</span><br><span class="line"></span><br><span class="line">rem 启动分片c</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_arbiter\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_master\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_shardc\wutb_shardc_slave\config</span><br><span class="line"></span><br><span class="line">rem 启动配置集</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_a\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_b\config</span><br><span class="line">start mongod --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_configs\wutb_configs_c\config</span><br><span class="line"></span><br><span class="line">rem 启动路由集</span><br><span class="line">start mongos.exe --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_mongos\wutb_mongos_a\config</span><br><span class="line">start mongos.exe --config G:\mangoDB\mongodb-win32-x86_64-2008plus-ssl-4.0.10\Wutb_Final\wutb_mongos\wutb_mongos_b\config</span><br></pre></td></tr></table></figure></div>

<p>注意会弹出14个mongo服务器弹出，若没出现，请依次启动去查看错误所在，并查看日志文件</p>
<h2 id="组合各分片、配置集和整个集群"><a href="#组合各分片、配置集和整个集群" class="headerlink" title="组合各分片、配置集和整个集群"></a>组合各分片、配置集和整个集群</h2><p>进入分片a的主节点或者从节点的mongo：(这里都进入主节点)</p>
<p>mong -port 11624</p>
<p><strong><em>\</em>分片sharda：\</strong></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config&#x3D;&#123;_id: &#39;wutb_sharda&#39;, members:[&#123;_id: 0,host:&#39;127.0.0.1:11624&#39;,priority:2&#125;,&#123;_id:1,host:&#39;127.0.0.1:11625&#39;,priority:1&#125;,&#123;_id:2,host:&#39;127.0.0.1:11623&#39;,arbiterOnly:true&#125;]&#125;</span><br><span class="line"></span><br><span class="line">rs.initiate(config)</span><br></pre></td></tr></table></figure></div>



<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps16.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps16.jpg" class="lazyload"></a>

<p>进入分片a的主节点或者从节点的mongo：(这里都进入主节点)</p>
<p>mong -port 21624</p>
<p><strong>*\分片shardb：\</strong></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config&#x3D;&#123;_id: &#39;wutb_shardb&#39;, members:[&#123;_id: 0,host:&#39;127.0.0.1:21624&#39;,priority:2&#125;,&#123;_id:1,host:&#39;127.0.0.1:21625&#39;,priority:1&#125;,&#123;_id:2,host:&#39;127.0.0.1:21623&#39;,arbiterOnly:true&#125;]&#125;</span><br><span class="line"></span><br><span class="line">rs.initiate(config)</span><br></pre></td></tr></table></figure></div>



<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps18.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps18.jpg" class="lazyload"></a>

<p>进入分片c的主节点或者从节点的mongo：(这里都进入主节点)</p>
<p>mong -port 31624</p>
<p><strong><em>\</em>分片shardc：**</strong></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config&#x3D;&#123;_id: &#39;wutb_shardc&#39;, members:[&#123;_id: 0,host:&#39;127.0.0.1:31624&#39;,priority:2&#125;,&#123;_id:1,host:&#39;127.0.0.1:31625&#39;,priority:1&#125;,&#123;_id:2,host:&#39;127.0.0.1:31623&#39;,arbiterOnly:true&#125;]&#125;</span><br><span class="line"></span><br><span class="line">rs.initiate(config)</span><br></pre></td></tr></table></figure></div>



<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps20.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps20.jpg" class="lazyload"></a>

<p>进入配置集的主节点或者从节点的mongo：</p>
<p>mong -port 41624</p>
<p>配置集wutb_configs：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config &#x3D; &#123;_id : &quot;wutb_configs&quot;,members : [&#123;_id : 0, host : &quot;127.0.0.1:41624&quot; &#125;,&#123;_id : 1, host : &quot;127.0.0.1:41625&quot; &#125;,&#123;_id:2,host:&quot;127.0.0.1:41626&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">rs.initiate(config)</span><br></pre></td></tr></table></figure></div>

<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps22.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/wps22.jpg" class="lazyload"></a>

<p>进入路由的mongo：</p>
<p>mong -port 51624</p>
<p>Mongos配置：加入分片</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh.addShard(&quot;wutb_sharda&#x2F;127.0.0.1:11624,127.0.0.1:11625,127.0.0.1:11623&quot;)</span><br><span class="line"></span><br><span class="line">sh.addShard(&quot;wutb_shardb&#x2F;127.0.0.1:21624,127.0.0.1:21625,127.0.0.1:21623&quot;)</span><br><span class="line"></span><br><span class="line">sh.addShard(&quot;wutb_shardc&#x2F;127.0.0.1:31624,127.0.0.1:31625,127.0.0.1:31623&quot;)</span><br></pre></td></tr></table></figure></div>



<a href="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318112337610.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/17/MongoDB%E5%88%86%E7%89%87%E5%BC%8F%E5%A4%8D%E5%88%B6%E9%9B%86%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/image-20200318112337610.png" class="lazyload"></a>



<h2 id="数据导入例子"><a href="#数据导入例子" class="headerlink" title="数据导入例子"></a>数据导入例子</h2><p>操作代码：</p>
<p>在mongos进行操作，必须在admin数据库下</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use admin</span><br><span class="line"></span><br><span class="line">db.runCommand(&#123;enablesharding:&quot;2017441624_wutianbao_db&quot;&#125;)</span><br><span class="line"># 哈希片键</span><br><span class="line">db.runCommand(&#123;shardcollection:&quot;2017441624_wutianbao_db.wutb_coll&quot;,key:&#123;recru_num:&quot;hashed&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>hexo的安装与配置</title>
    <url>/2020/03/17/hexo%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="1-node的安装"><a href="#1-node的安装" class="headerlink" title="1.node的安装"></a>1.node的安装</h2><p>下载node安装包</p>
<p><a href="https://nodejs.org/dist/v13.11.0/node-v13.11.0-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v13.11.0/node-v13.11.0-x64.msi</a> </p>
<p>_安装选择：选择最后一个 AddPath  不用再配置node的环境变量_，这里我们选择最新版，也可以选择稳定版</p>
<h2 id="2-更换npm国内镜像和自定义安装全局npm模块的目录"><a href="#2-更换npm国内镜像和自定义安装全局npm模块的目录" class="headerlink" title="2.更换npm国内镜像和自定义安装全局npm模块的目录"></a>2.更换npm国内镜像和自定义安装全局npm模块的目录</h2><h3 id="1-更换国内镜像"><a href="#1-更换国内镜像" class="headerlink" title="1.更换国内镜像"></a>1.更换国内镜像</h3><p>直接更换国内镜像：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></div>

<p>或者安装时指定下载地址：例如</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install your-need-model --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></div>

<h3 id="2-自定义模块安装目录"><a href="#2-自定义模块安装目录" class="headerlink" title="2.自定义模块安装目录"></a>2.自定义模块安装目录</h3><p><em>(由于本人不太喜欢安装一些东西在奇奇怪怪的目录，比较喜欢自定义，这里可以跳过，凭个人喜好而定)</em></p>
<p>推荐在node的安装目录下新建node_cache 和 node_overall两个文件夹（这两个文件夹也可以自定义名字，方便记忆且可读最好）</p>
<p>添加你自定义的目录：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">"D:\WebDevelopment\node\node_cache"</span>     <span class="comment">#node的缓存目录          </span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">"D:\WebDevelopment\node\node_overall"</span>		<span class="comment">#node模块目录</span></span><br></pre></td></tr></table></figure></div>

<p>添加node_overall模块目录至环境变量（path），全局使用才能找到模块</p>
<p>eg: D:\WebDevelopment\node\node_overall这个目录加入用户环境变量或者系统环境变量的path就行</p>
<h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div>

<h3 id="4-切换至你想要的目录"><a href="#4-切换至你想要的目录" class="headerlink" title="4.切换至你想要的目录"></a>4.切换至你想要的目录</h3><p>初始化： </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></div>

<ul>
<li>hexo\source_posts md文档就是博客文档</li>
<li>如果要写一篇博客（新建文件  xxx.md）</li>
<li>把md文档转html文件（hexo g）</li>
<li>在自己的服务器预览（hexo s） localhost:4000</li>
<li>如果从新生成html文件可能会有缓存 （hexo clean,hexo g）</li>
</ul>
<h2 id="5-初始化可能会遇到的问题"><a href="#5-初始化可能会遇到的问题" class="headerlink" title="5.初始化可能会遇到的问题"></a>5.初始化可能会遇到的问题</h2><p>提示install失败 landscape</p>
<p>这时候只需要：</p>
<p>npm install就行了</p>
<p><strong><em>以上内容仅是个人经验与分享</em></strong></p>
]]></content>
      <categories>
        <category>开发环境</category>
      </categories>
  </entry>
  <entry>
    <title>hadoop+spark配置</title>
    <url>/2020/03/10/hadoop-spark%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="首先需要Linux系统，本次安装以Ubuntu为例"><a href="#首先需要Linux系统，本次安装以Ubuntu为例" class="headerlink" title="首先需要Linux系统，本次安装以Ubuntu为例"></a>首先需要Linux系统，本次安装以Ubuntu为例</h2><ul>
<li><p>用到的软件，安装包版本为：</p>
<p>nanortual box6.0.2</p>
<p>hadoop-2.7.7.tar.gz<br>jdk-8u221-linux-x64.tar.gz<br>scala-2.13.1.tgz<br>spark-2.4.4-bin-without-hadoop.tgz</p>
<p>版本略有不同详情请下载官网推荐搭配，也可以去各大镜像站下载</p>
</li>
</ul>
<h2 id="更换Ubuntu软件源"><a href="#更换Ubuntu软件源" class="headerlink" title="更换Ubuntu软件源"></a>更换Ubuntu软件源</h2><p>由于Ubuntu软件源在国外，这里更换阿里云镜像源</p>
<p>最小化安装Ubuntu和nanortual box安装增强功能需要，若不在意，可忽略</p>
<h4 id="1-备份"><a href="#1-备份" class="headerlink" title="1.备份"></a>1.备份</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/source.list /etc/apa/source.list.bak</span><br></pre></td></tr></table></figure></div>

<h4 id="2-编辑"><a href="#2-编辑" class="headerlink" title="2.编辑"></a>2.编辑</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/source.list</span><br></pre></td></tr></table></figure></div>

<h4 id="3-修改内容"><a href="#3-修改内容" class="headerlink" title="3.修改内容"></a>3.修改内容</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></div>

<h4 id="4-软件更新"><a href="#4-软件更新" class="headerlink" title="4.软件更新"></a>4.软件更新</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></div>

<h4 id="5-更新软件包"><a href="#5-更新软件包" class="headerlink" title="5.更新软件包"></a>5.更新软件包</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></div>

<h2 id="hadoop的安装"><a href="#hadoop的安装" class="headerlink" title="hadoop的安装"></a>hadoop的安装</h2><p>​    准备好安装包，如果是在Ubuntu直接下载的可直接开始下一步，若是在Windows上下载，请用xftp上传至Ubuntu你自己的目录，这里我们上传至用户根目录</p>
<p>并且已经配置好ssh免密登录</p>
<h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><h5 id="jdk安装"><a href="#jdk安装" class="headerlink" title="jdk安装"></a>jdk安装</h5><p>解压安装包到~目录下</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u221-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></div>

<ul>
<li>JDK 环境变量(推荐复制一份 .bashrc文件备份)</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp ~/.bashrc ~/.bashrc.bat          <span class="comment">#备份</span></span><br><span class="line">nano ~/.bashrc                            <span class="comment">#打开文件</span></span><br></pre></td></tr></table></figure></div>

<p>​    内容的末尾添加如下代码（注意：等号两侧不要有空格）</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=~/jdk的根目录</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:. </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>重置生效</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></div>

<ul>
<li>检验是否安装成功</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java –version</span><br></pre></td></tr></table></figure></div>

<p>​    出现版本信息则安装成功</p>
<h5 id="hadoop安装"><a href="#hadoop安装" class="headerlink" title="hadoop安装"></a>hadoop安装</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf hadoop-2.7.7.tar.gz</span><br></pre></td></tr></table></figure></div>

<p>​    设置环境变量</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure></div>

<p>​    在打开文件的末尾添加以下两行代码，保存并退出。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_HOME=~/hadoop </span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin</span><br></pre></td></tr></table></figure></div>

<p>​    使配置生效。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></div>

<ul>
<li>验证 Hadoop 环境变量配置是否正确的方法如下</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis hdfs </span><br><span class="line"></span><br><span class="line">hdfs: /home/hadoop/hadoop-2.7.3/bin/hdfs /home/hadoop/hadoop-2.7.3/bin/hdfs.cmd </span><br><span class="line"></span><br><span class="line">whereis start-all.sh </span><br><span class="line"></span><br><span class="line">start-all: /home/hadoop/hadoop-2.7.3/sbin/start-all.sh /home/hadoop/hadoop-2.7.3/ </span><br><span class="line"></span><br><span class="line">sbin/start-all.cmd</span><br></pre></td></tr></table></figure></div>

<p>​        修改主机名 (也可以不用更改，但一定记得查看主机名，并记住)</p>
<ul>
<li>查看 Ubuntu 操作系统的主机名，参考下面的命令。 </li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure></div>

<ul>
<li>用 nano 命令编辑/etc/hostname 文件。 </li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/hostname</span><br></pre></td></tr></table></figure></div>

<p>主机名自行修改</p>
<ul>
<li>重启 Ubuntu 操作系统，使修改生效。</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></div>

<p>​    在文件末尾添加一下内容，下面的 IP 地址根据实际的 IP 地址修改。 </p>
<p>​    通过以下查询当前主机的IP地址</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure></div>

<ul>
<li><p>将你查询到的IP地址添加入hosts（最好不要用10.0.0.15 注意切换虚拟机的网络设置，用桥接网卡，其他的另行尝试）</p>
<p>修改/etc/hosts 文件。 </p>
</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/hosts</span><br></pre></td></tr></table></figure></div>

<p>添加的内容为：</p>
<p>你的IP地址（刚刚通过ifconfig查询的地址）  你的主机名</p>
<ul>
<li>进入 Hadoop 配置文件所在目录。 </li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop</span><br></pre></td></tr></table></figure></div>

<ul>
<li>配置 hadoop-env.sh </li>
</ul>
<p>添加 JAVA_HOME=你的jdk目录</p>
<ul>
<li><p>配置 core-site.xml </p>
<p>主要内容为configuration标签里的内容</p>
</li>
</ul>
<p>用 nano 命令打开 core-site.xml。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano core-site.xml</span><br></pre></td></tr></table></figure></div>

<ul>
<li>参考以下内容进行修改，修改完保存退出</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://你的主机名:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 以上 ip 地址或主机名要按实际情况修改 --&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/hadoop/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>配置说明： </p>
<p>fs.defaultFS 属性指定默认文件系统的 URI 地址，一般格式为“hdfs://host:port”。其中，host </p>
<p>可以设置为 Ubuntu 操作系统的 IP 地址以及主机名称中的任意一个，这里设置为主机名；port 如 </p>
<p>果不配置，则使用默认端口号 8020。 </p>
<p>hadoop.tmp.dir 指定 Hadoop 的临时工作目录，设置为/home/&lt;用户名&gt;/hadoop/tmp，&lt;用户名&gt; </p>
<p>请根据实际情况修改。注意：一定要配置 hadoop.tmp.dir，否则默认的 tmp 目录在/tmp 下，重启 </p>
<p>Ubuntu 操作系统时 tmp 目录下的 dfs/name 文件夹会被删除，造成没有 NameNode。 </p>
<ul>
<li>配置 hdfs-site.xml </li>
</ul>
<p>用 nano 命令打开 hdfs-site.xml。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano hdfs-site.xml</span><br></pre></td></tr></table></figure></div>

<p>修改成以下内容，保存退出。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>dfs.replication 的默认值是 3，因为伪分布式只有一个节点，所以值设置为 1。 </p>
<ul>
<li>配置 mapred-site.xml </li>
</ul>
<p>复制 mapred-site.xml.template，生成 mapred-site.xml。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp mapred-site.xml.template mapred-site.xml</span><br></pre></td></tr></table></figure></div>

<p>用 nano 命令打开 mapred-site.xml。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano mapred-site.xml</span><br></pre></td></tr></table></figure></div>

<p>修改成以下内容，保存退出。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>配置 yarn-site.xml </li>
</ul>
<p>​       用 nano 命令打开 yarn-site.xml。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano yarn-site.xml</span><br></pre></td></tr></table></figure></div>

<p> 修改成以下内容，保存退出。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>最好用IP地址防止意外<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 以上主机名或 IP 地址按实际情况修改 --&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-sernanoces<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>格式化 HDFS </li>
</ul>
<p>​       格式化的过程是创建初始目录和文件系统结构的过程。执行以下命令格式化 HDFS。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure></div>

<p>注意：格式化只需进行一次，下次启动不要再次格式化，否则会少 DataNode 进程。</p>
<ul>
<li>启动hadoop</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start-all.sh                               <span class="comment">#启动</span></span><br><span class="line">stop-all.sh                                    <span class="comment">#关闭</span></span><br></pre></td></tr></table></figure></div>

<p>查看jps</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure></div>

<p>有以下内容则考虑下一步</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NameNode </span><br><span class="line"></span><br><span class="line">DataNode </span><br><span class="line"></span><br><span class="line">SecondaryNameNode</span><br><span class="line"></span><br><span class="line">ResourceManager </span><br><span class="line"></span><br><span class="line">NodeManager</span><br></pre></td></tr></table></figure></div>

<p>​    如果某个主机少了某个进程，应该到相应主机去找对应的 log 查看原因，log 存放在 ${HADOOP_HOME}/logs 目录下。例如，若少了 DataNode 进程，那么就切换到${HADOOP_ HOME}/logs 目录下，查看 DataNode 相关的 log，找到含有“WARN”“Error”“Exception”等的 关键字句，通过上网搜索关键字句找到解决问题的办法。</p>
<ul>
<li>查看网页</li>
</ul>
<p>虚拟机查看：</p>
<p>localhost:8088                          localhost:50070</p>
<p>成功打开则配置完成</p>
<h2 id="spark配置"><a href="#spark配置" class="headerlink" title="spark配置"></a>spark配置</h2><h4 id="scala安装"><a href="#scala安装" class="headerlink" title="scala安装"></a>scala安装</h4><ul>
<li>解压Scala的安装包，解压命令：</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zvxf scala-2.13.1.tgz</span><br></pre></td></tr></table></figure></div>

<ul>
<li>重新执行命令： </li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></div>

<ul>
<li>配置环境变量，在 ~/.bashrc文件中添加如下内容：</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano ~/.bashrc</span><br></pre></td></tr></table></figure></div>

<ul>
<li>打开后添加</li>
</ul>
<p>​       export SCALA_HOME=scala的目录      # 配置SCALA_HOME<br>​       export PATH=$PATH:$SCALA_HOME/bin          # 添加bin目录到PATH</p>
<ul>
<li>scala启动</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scala         <span class="comment">#启动</span></span><br><span class="line">:quit        <span class="comment">#退出</span></span><br></pre></td></tr></table></figure></div>

<h4 id="spark安装"><a href="#spark安装" class="headerlink" title="spark安装"></a>spark安装</h4><ul>
<li>解压spark</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zvxf spark-2.3.3-bin-hadoop2.7.tgz</span><br></pre></td></tr></table></figure></div>

<p>​    配置环境变量，在 ~/.bashrc文件中添加如下内容：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> SPARK_HOME=spark目录    <span class="comment"># 配置SPARK_HOME</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SPARK_HOME</span>/bin                                  <span class="comment"># 添加bin目录到PATH</span></span><br></pre></td></tr></table></figure></div>

<p>​    重新执行命令： source     ~/.bashrc</p>
<ul>
<li>复制模板文件，将在Spark的conf目录中的spark-env.sh.template、log4j.properties.template、slaves.template三个文件拷贝为spark-env.sh、log4j.properties、slaves到同一目录下(conf文件夹)，注意把.template去掉，然后Spark启动时就会对文件中的配置项进行读取，否则找不到配置。命令如下：</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd $SPARK_HOME&#x2F;conf</span><br><span class="line">sudo cp spark-env.sh.template spark-env.sh               &#x2F;&#x2F; Spark环境相关</span><br><span class="line">sudo cp log4j.properties.template log4j.properties  &#x2F;&#x2F; Spark日志相关</span><br><span class="line">sudo  cp slaves.template slaves                                    &#x2F;&#x2F; Spark集群节点</span><br></pre></td></tr></table></figure></div>

<ul>
<li>修改spark-env.sh  添加以下参考内容</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> SCALA_HOME=scala目录</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=jdk目录</span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=hadoop目录</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=<span class="variable">$HADOOP_HOME</span>/hadoop/etc/hadoop</span><br><span class="line"><span class="built_in">export</span> SPARK_MASTER_IP=localhost</span><br><span class="line"><span class="built_in">export</span> SPARK_LOCAL_DIRS=spark目录</span><br><span class="line"><span class="comment">#export SPARK_DRIVER_MEMORY=512M</span></span><br><span class="line"><span class="built_in">export</span> SPARK_MASTER_PORT=7077</span><br><span class="line"><span class="built_in">export</span> SPARK_DIST_CLASSPATH=$(<span class="variable">$HADOOP_HOME</span>/bin/hadoop classpath)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>设置spark-2.3.3-bin-hadoop2.7文件夹可读可写可执行权限，命令：</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 spark-2.3.3-bin-hadoop2.7/</span><br></pre></td></tr></table></figure></div>

<ul>
<li>通过以下命令来检查</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spark-shell</span><br></pre></td></tr></table></figure></div>

<p>出现版本号，且没有错误,网页打开localhost:4040</p>
<ul>
<li>启动spark集群</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入spark sbin目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$SPARK_HOME</span>/sbin</span><br><span class="line"><span class="comment">#启动集群</span></span><br><span class="line">./start-all.sh</span><br></pre></td></tr></table></figure></div>

<p>无报错，打开localhost:8080     则spark配置完成</p>
<ul>
<li>可能遇到的问题</li>
</ul>
<p>启动scala报错 java.lang.NumberFormatException: For input string: “0x100” </p>
<p>解决方法如下：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano ~/.bashrc</span><br><span class="line"><span class="comment"># 在环境变量中导入</span></span><br><span class="line"><span class="built_in">export</span> TERM=xterm-color</span><br></pre></td></tr></table></figure></div>

<p>spark适用</p>
]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
  </entry>
  <entry>
    <title>Apache+php+MySQL的安装与配置</title>
    <url>/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="下载并解压Apache"><a href="#下载并解压Apache" class="headerlink" title="下载并解压Apache"></a>下载并解压Apache</h2><p>下载地址：<a href="https://www.apachelounge.com/download/" target="_blank" rel="noopener">https://www.apachelounge.com/download/</a> </p>
<p>使用说明：<a href="https://httpd.apache.org/docs/current/platform/windows.html" target="_blank" rel="noopener">https://httpd.apache.org/docs/current/platform/windows.html</a> </p>
<h2 id="配置-Apache"><a href="#配置-Apache" class="headerlink" title="配置 Apache"></a>配置 Apache</h2><p>配置文档：<a href="http://httpd.apache.org/docs/current/" target="_blank" rel="noopener">http://httpd.apache.org/docs/current/</a> </p>
<p>安装方式如下，先解压到纯英文路径的文件夹，然后执行以下命令： </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 注意：需要使用管理员身份运行命令行！！！ </span><br><span class="line"># 切换到 Apache 解压路径中的 bin 目录 $ cd &lt;解压目录&gt;&#x2F;bin </span><br><span class="line"># 安装 Apache 服务，‐n 参数是指定服务名称 $ httpd.exe ‐k install ‐n &quot;Apache&quot; </span><br><span class="line"># 如果需要卸载 Apache，可以执行以下命令 $ httpd.exe ‐k uninstall ‐n &quot;Apache&quot;</span><br></pre></td></tr></table></figure></div>

<p>执行安装命令过后会报一个错，原因是默认的配置文件有问题，需要先调整一下配置文件 conf/httpd.conf ，才能 </p>
<p>正常启动服务。 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Errors reported here must be corrected before the service can be star ted.</span><br><span class="line">httpd. exe: Syntax error on line 37 of D:&#x2F;WebDevelopment&#x2F;Apache&#x2F;Apache24&#x2F;conf&#x2F;httpd. conf: ServerRoot must be a valid directory</span><br></pre></td></tr></table></figure></div>

<p><strong>注意</strong>：以下所记录的行号仅供参考，不同版本的配置文件可能不尽相同。</p>
<p>找到 Apache 解压目录中的 conf 目录下的 httpd.conf 文件，定位到 37 行，将 c:/Apache24 改为解压目录，我这 </p>
<p>里解压到路径是 D:\WebDevelopment\Apache\Apache24 ，所以我这里修改</p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317170232891.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317170232891.png" class="lazyload"></a>

<p>配置文件中行首的 # 指的是注释 </p>
<p>修改完以后，执行以下命令重新测试配置文件是否通过。</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">httpd.exe ‐t</span><br></pre></td></tr></table></figure></div>

<p>任然报错</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AH00526: Syntax error on 1ine 246 of D:&#x2F;WebDevelopment&#x2F;Apache&#x2F;Apache24&#x2F;conf&#x2F; :</span><br><span class="line">DocumentRoot C:&#x2F;Apache24&#x2F;htdocs</span><br><span class="line">is not a direc tory,</span><br><span class="line">or is not readable</span><br></pre></td></tr></table></figure></div>

<p>通过错误信息得知，这里是因为另外一个地方配置的目录不存在导致的，所以接着调整 256 行的 DocumentRoot </p>
<p>选项： (文档目录自定义)</p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317170706781.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317170706781.png" class="lazyload"></a>

<p>然后重新执行 httpd.exe -t 测试配置文件，这时候应该提示 Syntax OK 。</p>
<p>接着运行以下命令重新启动 Apache 服务：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 注意：需要使用管理员身份运行命令行！！！ </span><br><span class="line">$ httpd.exe ‐k start ‐n &quot;Apache&quot; </span><br><span class="line"># 重新启动 Apache 服务 </span><br><span class="line">$ httpd.exe ‐k restart ‐n &quot;Apache&quot; </span><br><span class="line"># 停止 Apache 服务 </span><br><span class="line">$ httpd.exe ‐k stop ‐n &quot;Apache&quot; 123456</span><br></pre></td></tr></table></figure></div>

<p>回到浏览器中，地址栏输入：<a href="http://localhost/，回车访问，这时正常应该看到" target="_blank" rel="noopener">http://localhost/，回车访问，这时正常应该看到</a> It works! </p>
<p><strong>注意</strong>：</p>
<ul>
<li><p>确保配置文件语法检查通过 </p>
</li>
<li><p>确保 80 端口没有被其他程序占用 </p>
</li>
<li><p>确保防火墙允许 80 端口的请求，或者干脆关掉防火墙 </p>
</li>
<li><p>如果出现 <strong>Forbidden</strong> 情况，确保配置文件 httpd.conf 中 256 行（ DocumentRoot 之后）的 Directory 配 </p>
</li>
</ul>
<p>置的与 DocumentRoot 路径相同 </p>
<h3 id="监听端口"><a href="#监听端口" class="headerlink" title="监听端口"></a>监听端口</h3><p>监听端口可以随意修改为任意一个未被其他程序监听的端口，可以通过设置配置文件 httpd.conf 中的 Listen </p>
<p>指令后面的数字修改。 </p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317171358986.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317171358986.png" class="lazyload"></a>

<h3 id="网站根目录"><a href="#网站根目录" class="headerlink" title="网站根目录"></a>网站根目录</h3><p><strong>网站根目录</strong>就是存放我们网站文件的最顶层目录，通常 URL 中域名后面的第一个斜线对应（映射）的就是网 </p>
<p>站根目录。 </p>
<p><strong>默认文档</strong>指的是我们在访问某一个目录时（没有指定具体的文件），默认访问的文件叫做默认文档 </p>
<p><strong>注</strong>：动态网站情况会比较特殊，需要单独考虑，不一定是这个规则。 </p>
<p>默认 Apache 的网站根目录是安装目录中的 htdocs 文件夹，为了方便对网站文件的管理，一般我们会将其设置在 </p>
<p>一个自定义目录中（如果你不介意其实不修改也无所谓）。 </p>
<p>如果需要设置网站根目录，可以通过修改配置文件 httpd.conf 中的网站根目录选项切换。6.3. 默认文档 </p>
<p>当客户端访问的是一个目录而不是具体文件时，服务端默认返回这个目录下的某个文档（文件），这个文档 </p>
<p>就称之为<strong>默认文档</strong>。 </p>
<p>配置文件 httpd.conf 的 285 行的 DirectoryIndex ，默认文档可以配置多个（有前到后依次去找，找到为止，如 </p>
<p>果没找到任何一个则启用目录浏览）： </p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317171513802.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317171513802.png" class="lazyload"></a>

<h3 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h3><p>如果一台机器上只有一个网站的话，没有任何问题，但是如果想要在一台机器上部署多个站点，就必须通过配置虚 </p>
<p>拟主机的方式解决。 </p>
<p>由于后期对虚拟主机的配置操作非常常见，所以我们一般将虚拟主机的配置单独放到一个配置文件中，然后 </p>
<p>在主配置文件中引入，避免破坏主配置文件中的其他配置。 </p>
<p>Include conf/extra/httpd-vhosts.conf 配置的作用就将另外一个配置文件引入（使其生效） </p>
<p>具体的操作方式就是在主配置文件 httpd.conf 的 514 行取消注释：然后找到 Apache 的虚拟主机配置文件，添加一个如下的虚拟主机配置节点，然后重新启动 Apache。 </p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317171810660.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317171810660.png" class="lazyload"></a>

<p>配置项：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    DocumentRoot "F:/www/wordpress"      #虚拟主机根目录</span><br><span class="line"><span class="tag">&lt;<span class="name">Directory</span> "<span class="attr">F:</span>/<span class="attr">www</span>/<span class="attr">wordpress</span>"&gt;</span></span><br><span class="line">    Options Indexes FollowSymLinks            #设置访问权限</span><br><span class="line">    AllowOverride None#</span><br><span class="line">    Require all granted</span><br><span class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line">    ServerName wordpress.io                    #虚拟主机域名</span><br><span class="line">    ErrorLog "logs/wordpress.dev-error.log"         #虚拟主机日志</span><br><span class="line">    CustomLog "logs/wordpress.dev-access.log" common</span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>修改本机hosts文件：（此目录下 ：C:\Windows\System32\drivers\etc）</p>
<p>添加  ：  127.0.0.1  wordpress.io</p>
<p>注意：</p>
<p>.dev 的地址解析有异常，最好不要用，还有一些地址还待发现</p>
<p>如果使用了虚拟主机，则默认必须全部使用虚拟主机，即之前的默认网站也必须通过虚拟主机方式配 </p>
<p>置，否则访问不到。参考：<a href="http://skypegnu1.blog.51cto.com/8991766/1532454" target="_blank" rel="noopener">http://skypegnu1.blog.51cto.com/8991766/1532454</a> </p>
<p>如果虚拟主机的端口使用的不是 80 ，则需要在主配置文件中添加一个对这个端口的监听： </p>
<h2 id="配置Apache支持PHP"><a href="#配置Apache支持PHP" class="headerlink" title="配置Apache支持PHP"></a>配置Apache支持PHP</h2><ul>
<li><p>在服务器上安装 PHP </p>
<p>解压 php 到纯英文路径目录中      下载地址：<a href="https://windows.php.net/download#php-7.4" target="_blank" rel="noopener">https://windows.php.net/download#php-7.4</a></p>
</li>
<li><p>php.ini的配置</p>
<p>直接复制PHP根目录中php.ini-development文件，改名为php.ini</p>
<p>打开php.ini，注释掉分号启用</p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317173832232.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317173832232.png" class="lazyload"></a>
</li>
<li><p>在 Apache 中添加支持 PHP 的配置 </p>
</li>
</ul>
<p>​       在 Apache 添加 PHP 处理模块 </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># php support</span><br><span class="line">LoadModule php7_module D:&#x2F;WebDevelopment&#x2F;PHP&#x2F;php7apache2_4.dll</span><br></pre></td></tr></table></figure></div>

<p>​       添加PHP目录</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PHPIniDir &quot;D:&#x2F;WebDevelopment&#x2F;PHP&quot;</span><br></pre></td></tr></table></figure></div>

<p>​        在 <ifmodule mime_module> 节点中添加 .php 扩展名解析支持 </ifmodule></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># parse .php files </span><br><span class="line">AddType application&#x2F;x‐httpd‐php .php</span><br></pre></td></tr></table></figure></div>

<p>​       默认文档配置节点 <ifmodule dir_module> 中添加 index.php </ifmodule></p>
<p>​                <em>默认文档指的是在访问一个目录而不是具体文件名时，默认执行的文件名</em></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">    DirectoryIndex index.html index.php </span><br><span class="line">&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>重启 Apache</li>
</ul>
<h2 id="安装MySQL解压版"><a href="#安装MySQL解压版" class="headerlink" title="安装MySQL解压版"></a>安装MySQL解压版</h2><p>下载地址：<a href="https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.18-winx64.zip" target="_blank" rel="noopener">https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.18-winx64.zip</a></p>
<ul>
<li><p>下载完之后，解压至你想要的目录</p>
</li>
<li><p>添加环境变量 MySQL的bin目录</p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317201917441.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317201917441.png" class="lazyload"></a>
</li>
<li><p>cmd管理员权限进入到MySQL的根目录的bin目录</p>
</li>
<li><p>新建一个my.ini   配置文件如下</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">; 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8</span><br><span class="line">[mysqld]</span><br><span class="line">;设置3306端口</span><br><span class="line">port &#x3D; 3306 </span><br><span class="line">; 设置mysql的安装目录</span><br><span class="line">basedir&#x3D;D:\Software\Programming Software\Database\MySQL\mysql-8.0.15-winx64</span><br><span class="line">; 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;D:\Software\Programming Software\Database\MySQL\mysql-8.0.15-winx64\data</span><br><span class="line">; 允许最大连接数</span><br><span class="line">max_connections&#x3D;200</span><br><span class="line">; 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line">; 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>进入MySQL的根目录的bin目录（用管理员cmd）</p>
</li>
</ul>
<p>命令行输入：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqld --install</span><br></pre></td></tr></table></figure></div>

<p>初始化生成随机密码：末尾密码请记住</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure></div>

<p>启动服务：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure></div>

<p>使用随机密码登录并修改密码 ：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></div>

<p>修改密码:</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;新密码&#39;;</span><br><span class="line">更新密码：</span><br><span class="line">update mysql.user set authentication_string&#x3D;password(&#39;新密码&#39;) where user&#x3D;&#39;root&#39; and Host &#x3D; &#39;localhost&#39;;</span><br></pre></td></tr></table></figure></div>



<h2 id="PHP开启MySQL："><a href="#PHP开启MySQL：" class="headerlink" title="PHP开启MySQL："></a>PHP开启MySQL：</h2><p>打开PHP的php.ini文件</p>
<p>启用MySQL： 去除前面的分号即可</p>
<a href="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317203046122.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="/2020/03/08/Apache-php-MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20200317203046122.png" class="lazyload"></a>

<p>有可能启用后启动php会报错，提示无法加载模块。可能原因是php的模块应为 php_pdo_mysql.dll，而php.ini的配置中，缺少php前缀，加上即可</p>
]]></content>
      <categories>
        <category>开发环境</category>
      </categories>
  </entry>
  <entry>
    <title>es6的学习</title>
    <url>/2020/03/07/es6%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>已更新目前所学内容</p>
<h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><p>注：</p>
<ol>
<li><p>es6没有对es5有任何修改，全部新增</p>
<ol>
<li><p>在es5中定义变量：<code>var</code>  <code>function</code></p>
</li>
<li><p>允许先使用再定义</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a)  <span class="comment">//变量的提升</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>  <span class="comment">//全局变量会成为window对象属性</span></span><br></pre></td></tr></table></figure></div>

</li>
</ol>
</li>
</ol>
<h4 id="let的特点"><a href="#let的特点" class="headerlink" title="let的特点"></a>let的特点</h4><ol>
<li><p><strong>使用let定义的变量只在块级中有效</strong>   </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">10</span> <span class="comment">//只在代码块内有效</span></span><br><span class="line">    <span class="built_in">console</span>.log(a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>不存在变量的提升（先定义，在使用）</strong></p>
</li>
<li><p><strong>let定义的变量不允许重复定义</strong></p>
</li>
</ol>
<h4 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h4><p>es5中，变量有两种：全局变量，局部变量</p>
<p>es6 全局变量，局部变量，块级变量</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i)</span><br><span class="line"><span class="comment">//打印出5个5</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(j)</span><br><span class="line">    <span class="comment">//分别打印1 2 3 4 5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="闭包问题"><a href="#闭包问题" class="headerlink" title="闭包问题"></a>闭包问题</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> lis  = <span class="built_in">document</span>.querySelectorAll(<span class="string">'li'</span>)</span><br><span class="line"><span class="comment">// 点击每个li时，弹出自身的位置</span></span><br><span class="line"><span class="comment">// for(var i =0;i&lt;lis.length;i++)&#123;</span></span><br><span class="line"><span class="comment">//     lis[i].onclick = function()&#123;</span></span><br><span class="line"><span class="comment">//         alert(i)   //全是5  闭包现象</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>;i&lt;lis.length;i++)&#123;</span><br><span class="line">    lis[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(i)   <span class="comment">//全是5  闭包现象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注意：变量是let声明的，当前的i只在本轮循环有效，所以每一次循环的其实都是一个新的变量。你可能会问，如果每一轮循环的变量i都是重新声明的，那它怎么知道上一轮循环的值，从而计算出本轮循环的值？这是因为JavaScript引擎内部会记住上一轮循环的值，初始化本轮的变量i时，就在上一轮循环的基础上进行计算。</span><br><span class="line">另外，for循环还有一个特别之处，就是设置循环变量的哪部分是一个父作用域，而循环体内部是一个单独的子作用域</span><br></pre></td></tr></table></figure></div>

<h4 id="暂时性死区"><a href="#暂时性死区" class="headerlink" title="暂时性死区"></a>暂时性死区</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a)   <span class="comment">//undefined</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a)</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>let访问不到a</p>
<p><strong>！！！变量一定要定义再使用</strong></p>
<h4 id="循环中的块级绑定"><a href="#循环中的块级绑定" class="headerlink" title="循环中的块级绑定"></a>循环中的块级绑定</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i= <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">    process[item[i]]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//i在此处仍然可被访问</span></span><br><span class="line"><span class="built_in">console</span>.log(i)</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">    progress[item[j]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//此处的i不可访问，会抛出错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//item请自定义，这里只是举例</span></span><br></pre></td></tr></table></figure></div>

<h4 id="let定义变量好处（总结）"><a href="#let定义变量好处（总结）" class="headerlink" title="let定义变量好处（总结）"></a>let定义变量好处（总结）</h4><ol>
<li>不存在变量提升</li>
<li>let定义的变量不会成为window对象的属性</li>
<li>let不允许重复定义变量</li>
</ol>
<h4 id="let例子"><a href="#let例子" class="headerlink" title="let例子"></a>let例子</h4><p>闭包解决：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//希望使用for循环生成一个数组，数组中的元素都是函数，</span></span><br><span class="line"><span class="comment">// 每个函数的功能均为：输出for循环执行时的位置</span></span><br><span class="line"><span class="keyword">var</span> arr = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    arr.push((<span class="function"><span class="keyword">function</span> (<span class="params">j</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(j)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(i))</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">4</span>]())</span><br></pre></td></tr></table></figure></div>

<p>let定义：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr0 = []</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">    arr0.push(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(j)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr0[<span class="number">4</span>]())  <span class="comment">//4</span></span><br></pre></td></tr></table></figure></div>

<h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><ol>
<li>声明一个只读的常量（不能被修改的量）</li>
<li>其他用法与let一致</li>
</ol>
<p>注意：为了与一般的变量进行区分，常量的名称一般为大写   const定义的常量必须在定义的时候初始化（赋值）</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>]</span><br><span class="line"><span class="comment">//arr=['hello','world']   //对数组重新赋值    error  不允许重复赋值</span></span><br><span class="line">arr[<span class="number">0</span>]=<span class="string">'hello'</span>   <span class="comment">//可以的，数组的内容是可以改变的</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//希望引用类型也变为常量</span></span><br><span class="line"><span class="comment">//使用Object。freeze()方法结合const,可以完成一个引用类型常量的定义</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="comment">//在ES6中Object.freeze()冻结 冰冻</span></span><br><span class="line"><span class="keyword">const</span> arr0 = <span class="built_in">Object</span>.freeze([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]) <span class="comment">//该数组已被冻结</span></span><br><span class="line"><span class="built_in">console</span>.log(arr0)</span><br><span class="line"><span class="comment">//arr0 = [100,200] //对数组进行赋值  error 常量不能被修改</span></span><br><span class="line">arr0[<span class="number">0</span>]=<span class="string">'hello world'</span><span class="comment">//不报错 不生效</span></span><br><span class="line"><span class="built_in">console</span>.log(arr0)</span><br></pre></td></tr></table></figure></div>

<p><strong>上图针对于对象也适用</strong></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>​        顶层对象，在浏览器环境指的是window对象，在Node指的是global对象。ES6之中，顶层对象的属性与全局变量是等价的。</p>
<p>​        顶层对象的属性与全局变量挂钩，被认为是JavaScript语言最大的设计败笔之一。这样的几个很大的问题，首先是没法在编译时报出变量未声明的错误，只有运行时才能知道（因为全局变量坑能是顶层对象的属性造成的，而属性的创造是动态的，其次，程序员很不容易不知不觉地就创造除了全局变量），最后，顶层对象的属性是可以到处读写的，这非常不利于模块化编程。另一方面，window对象有实体含义，指的是浏览器的窗口对象，顶层对象是一个有实体含义的对象，也是不合法的。</p>
<p>​        ES6巍峨改变这一观点，一方面规定，为了保证兼容性，var命令和function命令声明的全局变量，依旧是顶层对象的属性，另一方面规定，let命令，const命令，class命令声明的全局变量，不属于顶层对象的属性。也就是说，从ES6开始，全局变量将逐步与顶层对象的属性脱钩。</p>
<h3 id="数组的解构"><a href="#数组的解构" class="headerlink" title="数组的解构"></a>数组的解构</h3><h4 id="结构——–模式匹配"><a href="#结构——–模式匹配" class="headerlink" title="结构——–模式匹配"></a>结构——–模式匹配</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ES6允许写成如下：</span></span><br><span class="line"><span class="keyword">let</span> [a,b,c]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment">//上面的代码表示，可以从数组中提取值，按对应位置赋值变量</span></span><br><span class="line"><span class="comment">//本质上这种写法属于模式匹配，只要等号两边的模式相同，左边的变量会被赋予对应的值</span></span><br><span class="line"><span class="comment">//如果结构不成功，变量的值就等于undefined</span></span><br></pre></td></tr></table></figure></div>

<h4 id="对数组的解构："><a href="#对数组的解构：" class="headerlink" title="对数组的解构："></a>对数组的解构：</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]</span><br><span class="line"><span class="keyword">let</span> [a,b,c]=arr</span><br></pre></td></tr></table></figure></div>

<h4 id="完全结构："><a href="#完全结构：" class="headerlink" title="完全结构："></a>完全结构：</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> [[a,b],c] = [[<span class="number">10</span>,<span class="number">20</span>],<span class="number">30</span>]</span><br><span class="line"><span class="keyword">let</span> [a1,a2]= [[<span class="number">10</span>,<span class="number">20</span>],<span class="number">30</span>]  <span class="comment">//完全结构</span></span><br></pre></td></tr></table></figure></div>

<h4 id="不完全结构："><a href="#不完全结构：" class="headerlink" title="不完全结构："></a>不完全结构：</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> [a,b]=[<span class="number">100</span>]</span><br><span class="line"><span class="keyword">let</span> [c,d,e] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">56</span>,<span class="number">6</span>]</span><br></pre></td></tr></table></figure></div>

<h4 id="等号左右两边模式不一致"><a href="#等号左右两边模式不一致" class="headerlink" title="等号左右两边模式不一致"></a>等号左右两边模式不一致</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//报错</span></span><br><span class="line"><span class="comment">//let [foo] = 1;   结构不匹配</span></span><br><span class="line"><span class="keyword">let</span> [foo] = <span class="literal">false</span></span><br></pre></td></tr></table></figure></div>

<p>如果等号的右边的不是数组（或者可以严格地说，不是可遍历的结构），那么将会报错。</p>
<h4 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//默认值，解构支持默认值</span></span><br><span class="line"><span class="comment">//let [a,b=0]=[10,20]</span></span><br><span class="line"><span class="keyword">let</span> [a,b=<span class="number">0</span>]=[<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [foo = <span class="literal">true</span>] = []</span><br><span class="line">foo <span class="comment">//ture</span></span><br><span class="line"><span class="keyword">let</span> [x,y=<span class="string">'b'</span>] = [<span class="string">'a'</span>]   <span class="comment">// x='a',y ='b'</span></span><br></pre></td></tr></table></figure></div>

<h4 id="对象和字符串解构"><a href="#对象和字符串解构" class="headerlink" title="对象和字符串解构"></a>对象和字符串解构</h4><p>字符串：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">'hello'</span>,<span class="string">'world'</span>,<span class="string">'yes'</span>,<span class="string">'ok'</span>]</span><br><span class="line"><span class="keyword">let</span> [a,b,c,d]= arr</span><br></pre></td></tr></table></figure></div>

<p>对象：对象的解构要保证：变量名称与属性名称一致</p>
<ul>
<li>对象的解构与数组有一个重要的不同。数组的元素是按次序排列的，变量的取值由它的位置决定；而对象的属性没有次序，变量必学与属性名相同</li>
</ul>
<p>完全结构：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj =&#123;</span><br><span class="line">    name:<span class="string">'xiaowu'</span>,</span><br><span class="line">    age:<span class="number">22</span>,</span><br><span class="line">    addr:<span class="string">'大学城'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;a,b&#125; = obj  <span class="comment">//不报错，但赋值失败</span></span><br><span class="line"><span class="comment">//注意：对象的解构要保证：变量名与属性名称保持一致</span></span><br><span class="line"><span class="keyword">let</span> &#123;name,age,addr&#125;= obj</span><br></pre></td></tr></table></figure></div>

<p>不完全解构：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;color,age&#125; =&#123;</span><br><span class="line">    name: <span class="string">'xiaowu'</span>,</span><br><span class="line">    age: <span class="number">22</span></span><br><span class="line">    color: <span class="string">'skyblue'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>简化对象的属性名称：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">    url: <span class="string">'http://www.vchamps.cn'</span>,</span><br><span class="line">    myProductName；<span class="string">'整理笔记太难了'</span>，</span><br><span class="line">    price: <span class="string">'$22'</span>,</span><br><span class="line">    sale: <span class="string">'2222'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;myProductName&#125; = data</span><br><span class="line"><span class="comment">//简化对象的属性名称（对属性名称重新命名）</span></span><br><span class="line"><span class="keyword">let</span> &#123;<span class="attr">myProductName</span>:mName&#125; = data</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mName)</span><br><span class="line"><span class="built_in">console</span>.log(myProductName)  <span class="comment">//已经被重新命名为mName</span></span><br></pre></td></tr></table></figure></div>

<h4 id="字符串解构赋值"><a href="#字符串解构赋值" class="headerlink" title="字符串解构赋值"></a>字符串解构赋值</h4><p>完全解构</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'hello'</span></span><br><span class="line"><span class="keyword">let</span> [a,b,c,d,e]=str</span><br><span class="line"><span class="built_in">console</span>.log(a,b,c,d,e)</span><br></pre></td></tr></table></figure></div>

<h4 id="函数的参数解构"><a href="#函数的参数解构" class="headerlink" title="函数的参数解构"></a>函数的参数解构</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参数的解构</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">[x,y]</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x+y)</span><br><span class="line">&#125;</span><br><span class="line">add([<span class="number">10</span>,<span class="number">20</span>])</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参数解构  默认值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">&#123;name,age&#125;=&#123;&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(name.age)</span><br><span class="line">&#125;</span><br><span class="line">fn(&#123;</span><br><span class="line">    name: <span class="string">'jack'</span>,</span><br><span class="line">    age:<span class="number">20</span>,</span><br><span class="line">    addr: <span class="string">'大学城'</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// fn()   error</span></span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">[x=<span class="number">0</span>,y=<span class="number">0</span>] = []</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x+y)</span><br><span class="line">&#125;</span><br><span class="line">add()</span><br></pre></td></tr></table></figure></div>

<h4 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h4><p>1.交换变量的值</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a =<span class="number">3</span> ,b =<span class="number">5</span></span><br><span class="line"><span class="comment">//交换a和b的值，不能使用第三个变量</span></span><br><span class="line">a = a+b</span><br><span class="line">b = a-b <span class="comment">//3</span></span><br><span class="line">a = a-b</span><br><span class="line"><span class="comment">//ES6中</span></span><br><span class="line"><span class="comment">// [b,a] = [a,b]</span></span><br></pre></td></tr></table></figure></div>

<p> 2.从函数返回多个值</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//应用2 ：函数返回多个值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [a,b,c]= fn()</span><br></pre></td></tr></table></figure></div>

<p>3.函数参数的定义</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">[x=<span class="number">0</span>,y=<span class="number">0</span>] = []</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x+y)</span><br><span class="line">&#125;</span><br><span class="line">add([<span class="number">10</span>,<span class="number">30</span>])</span><br><span class="line"><span class="comment">//add()</span></span><br></pre></td></tr></table></figure></div>

<p>4.提取json数据</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jsonData = &#123;</span><br><span class="line">    id:<span class="number">42</span>,</span><br><span class="line">    status: <span class="string">'OK'</span>,</span><br><span class="line">    data: [<span class="number">867</span>,<span class="number">5360</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;id,status,<span class="attr">data</span>:number&#125; = jsonData</span><br><span class="line"><span class="built_in">console</span>.log(id,status,number)</span><br></pre></td></tr></table></figure></div>

<h3 id="函数的扩展"><a href="#函数的扩展" class="headerlink" title="函数的扩展"></a>函数的扩展</h3><h4 id="函数参数默认值"><a href="#函数参数默认值" class="headerlink" title="函数参数默认值"></a>函数参数默认值</h4><p>基本语法：</p>
<p>在es5中，不能为函数的参数指定默认值</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y == <span class="literal">undefined</span> &amp;&amp; x ! = <span class="literal">undefined</span>)&#123;</span><br><span class="line">        y=<span class="number">0</span></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="literal">undefined</span>)&#123;</span><br><span class="line">        x = y =<span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">add(<span class="number">10</span>,<span class="number">20</span>)</span><br><span class="line">add(<span class="number">10</span>) <span class="comment">//x=10,y没有值</span></span><br><span class="line">add()</span><br></pre></td></tr></table></figure></div>

<p>在ES6中支持为函数的参数设定默认值</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x=<span class="number">0</span>,y=<span class="number">0</span></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x+y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="rest参数"><a href="#rest参数" class="headerlink" title="rest参数"></a>rest参数</h4><p>es5中：实现求和（没有rest参数）有arguments</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="comment">//arguments中保存了所有接受到的参数</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>)</span><br><span class="line">    <span class="comment">//因为arguments不是数组，不能使用foreach</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</span><br><span class="line">        sum += <span class="built_in">arguments</span>[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(sum)</span><br><span class="line">&#125;</span><br><span class="line">getSum()</span><br></pre></td></tr></table></figure></div>

<p><strong>es6中：rest参数</strong></p>
<pre><code>ES6引入rest参数（形式为.....变量名），用于获取函数多余的参数，这样就不需要使用arguments对象了，rest参数搭配的变量是一个数组，该变量将多余的参数放入数组中</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params">...params</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// console.log(params)</span></span><br><span class="line">    params.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        sum += item</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(sum)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getSum(<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>)</span><br></pre></td></tr></table></figure></div>

<p>！！ <strong>rest参数注意点</strong></p>
<p>rest参数必须为函数参数的最后一个参数</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//rest参数必须为函数参数的最后一个参数</span></span><br><span class="line"><span class="comment">//function sum(num,....rest)&#123;  //错误  error</span></span><br><span class="line">	</span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">num,..rest</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(rest)</span><br><span class="line">    <span class="built_in">console</span>.log(num)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="函数复习"><a href="#函数复习" class="headerlink" title="函数复习"></a>函数复习</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'java or c?'</span>)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h4><p>在ES6中针对含税， =&gt;代表函数</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ES6</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="params">a</span> =&gt;</span> a</span><br></pre></td></tr></table></figure></div>

<p><strong><em>箭头函数使用规则</em></strong></p>
<ol>
<li><p>若函数没有参数，则不能省略（）</p>
<p>​    ①若函数体只有一句代码，则可以省略{}，</p>
<p>​        若不是return语句，但是需要注意在语句前添加void；</p>
<p>​        若是return语句，则直接省略return即可</p>
<p>②若函数体有多条语句组成，咋不能省略{ }</p>
</li>
<li><p>有参数函数</p>
<p>①有一个参数，可以省略（） 其余和以上类似</p>
<p>②多个参数，不能省略( )</p>
<p>③若函数体只有一句return语句，且返回值为对象，则使用（）包裹，若返回值为数组则不需要处理</p>
</li>
</ol>
<p>1.无参函数</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//无参函数</span></span><br><span class="line"><span class="comment">//1)函数体只有一条语句</span></span><br><span class="line"><span class="keyword">let</span> fn1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'hello world'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//箭头函数</span></span><br><span class="line"><span class="keyword">let</span> fn1 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">void</span> <span class="built_in">console</span>.log(<span class="string">'hello world'</span>) <span class="comment">//void标识该代码没有返回值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2)无参，函数体只有一句代码，return语句</span></span><br><span class="line"><span class="keyword">let</span> fn2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'hello world'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> fn2 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="string">'hello world'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3)无参，函数体有多条语句</span></span><br><span class="line"><span class="keyword">let</span> fn3 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    conssole.log(<span class="string">'hello'</span>)</span><br><span class="line">    conssole.log(<span class="string">'javascript'</span>)</span><br><span class="line">    conssole.log(<span class="string">'python'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn3 = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    conssole.log(<span class="string">'hello'</span>)</span><br><span class="line">    conssole.log(<span class="string">'javascript'</span>)</span><br><span class="line">    conssole.log(<span class="string">'python'</span>)</span><br><span class="line">&#125;  <span class="comment">//不能省略（），函数体有多条语句</span></span><br></pre></td></tr></table></figure></div>

<ol start="2">
<li>有参函数</li>
</ol>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//有参函数</span></span><br><span class="line"><span class="keyword">let</span> fn4 = <span class="function"><span class="keyword">function</span> (<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'hello'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> fn4 = <span class="function"><span class="params">x</span>=&gt;</span> <span class="keyword">void</span> <span class="built_in">console</span>.log(<span class="string">'hello'</span>)</span><br><span class="line"><span class="keyword">let</span> fn4 = <span class="function"><span class="params">x</span> =&gt;</span> <span class="string">'hello'</span></span><br><span class="line"><span class="keyword">let</span> fn4 = <span class="function"><span class="params">x</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'hello'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'hello'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn5 = <span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">    <span class="built_in">console</span>.log(x+y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn5 = <span class="function">(<span class="params">x,y</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">    <span class="built_in">console</span>.log(x+y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>示例：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数体，有一句代码，且是return语句</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        name: name,</span><br><span class="line">        age: age</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//简化，若函数返回值为对象，有歧义，若返回对象，则使用（）包裹起来</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function">(<span class="params">name,age</span>)=&gt;</span>(&#123;<span class="attr">name</span>:name,<span class="attr">age</span>:age&#125;)</span><br></pre></td></tr></table></figure></div>

<p>特殊情况：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    name:x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="params">x</span> =&gt;</span> &#123;<span class="attr">name</span>:x&#125; <span class="comment">//不会报错，但是返回值为undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(fn(<span class="string">'小黑'</span>))</span><br></pre></td></tr></table></figure></div>

<p>被定义为此种函数，返回值无</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//对某段代码进行命名</span></span><br><span class="line">tag:<span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'i='</span>+i+<span class="string">"j="</span>+j)</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span><span class="comment">//结束当前循环(最近这个循环)</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//希望使用break语句结束整个循环</span></span><br><span class="line">        <span class="keyword">if</span>(p==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span> tag <span class="comment">//结束指定的循环</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="箭头函数和解构"><a href="#箭头函数和解构" class="headerlink" title="箭头函数和解构"></a>箭头函数和解构</h4><p>数组解构：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params">[a,b,c]</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a+b+c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> fn = <span class="function">(<span class="params">[a,b,c]</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a+b+c)</span><br><span class="line">&#125;</span><br><span class="line">fn([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>])</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//对象解构</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params">&#123;name,age&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(name,age)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function">(<span class="params">&#123;name,age&#125;</span>)=&gt;</span><span class="keyword">void</span> <span class="built_in">console</span>.log(name,age)</span><br><span class="line">fn(&#123;<span class="attr">name</span>:<span class="string">'小黑'</span>,<span class="attr">age</span>:<span class="number">22</span>&#125;)</span><br></pre></td></tr></table></figure></div>



<p>举例：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//求圆的面积</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">Math</span>.PI*r*r</span><br><span class="line"><span class="comment">//求长方形的面积</span></span><br><span class="line"><span class="keyword">let</span> fn1 = <span class="function">(<span class="params">w,h</span>) =&gt;</span> w*h</span><br></pre></td></tr></table></figure></div>

<h4 id="箭头函数注意事项"><a href="#箭头函数注意事项" class="headerlink" title="箭头函数注意事项"></a>箭头函数注意事项</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">箭头函数使用有几个注意事项</span><br><span class="line">（1）函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象</span><br><span class="line">（2)不可以当做构造函数，也就是说，不可以使用new命令，否则就会抛出一个错误</span><br><span class="line">（3）不可以使用arguments对象，该对象在函数体内不存在，如果要使用，可以使用rest参数代替</span><br><span class="line">（4）不可以使用yield命令，因此箭头函数不能用作generator函数</span><br><span class="line">上面四点中，第一点尤其值得注意。this对象的指向是可变的，但是在箭头函数中，它是固定的</span><br></pre></td></tr></table></figure></div>

<p>（1）this的问题：</p>
<p>​                在普通函数中，this指向调用者</p>
<p>​                在肩头函数内，this指向声明时的对象</p>
<p>​        构造函数不能使用箭头函数</p>
<p>​        原型中也不能使用箭头函数</p>
<p>在箭头函数内部不能使用arguments</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    name:<span class="string">'小黑'</span>,</span><br><span class="line">    aga:<span class="number">22</span>,</span><br><span class="line">    say: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    sayHello:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//启动一个定时器</span></span><br><span class="line">        <span class="comment">//setTimeout(function()&#123;</span></span><br><span class="line">             <span class="comment">//console.log(this)  //this指向window</span></span><br><span class="line">    <span class="comment">//&#125;)</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">            conssole.log(<span class="keyword">this</span>)   <span class="comment">//this指向当前对象</span></span><br><span class="line">        &#125;,<span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="箭头函数与回调函数"><a href="#箭头函数与回调函数" class="headerlink" title="箭头函数与回调函数"></a>箭头函数与回调函数</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">10</span>]</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>,log(item)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">arr.forEach(<span class="function"><span class="params">item</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//map方法，匹配数组中的内容，做修改之后，在返回一个新的数组</span></span><br><span class="line"><span class="keyword">let</span> arr0 = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item*<span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arro = arr.map(<span class="function"><span class="params">item</span> =&gt;</span> item*<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div>



<h3 id="字符串的扩展"><a href="#字符串的扩展" class="headerlink" title="字符串的扩展"></a>字符串的扩展</h3><h4 id="字符串的遍历器接口"><a href="#字符串的遍历器接口" class="headerlink" title="字符串的遍历器接口"></a>字符串的遍历器接口</h4><p>es5遍历：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">var</span> = <span class="string">'hello'</span></span><br><span class="line"><span class="comment">//遍历字符串</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;str.length;i++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i,str[i]) <span class="comment">//i代表索引</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> str)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i,str[i])  <span class="comment">//i代表索引</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>使用for  ….of遍历字符串：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用for ...of遍历字符串</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">of</span> str)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)  <span class="comment">//i 字符串中的数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="字符串中新增的方法"><a href="#字符串中新增的方法" class="headerlink" title="字符串中新增的方法"></a>字符串中新增的方法</h4><ul>
<li>includes()    判断是否包含指定字符串   布尔类型</li>
<li>startsWith    是否以指定字符串开头      布尔类型</li>
<li>endwith           是否以指定字符串结尾    布尔类型</li>
<li>repeat    返回一个新字符串，表示该字符串重复n次</li>
<li>padStart（），padEnd（） es2017引入了字符串补全长度的功能。如果某个字符串不够指定长度，会在头部或尾部补全。padStart用于头部补全，padEnd用于尾部补全   padEnd 在末尾追加内容  —-到指定的长度，padStart 在开头追加内容 —–到指定长度</li>
</ul>
<p>es5：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// indexOf()  第一次出现的位置  没有-1</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">'你好。非常好，very good'</span></span><br><span class="line"><span class="keyword">let</span> src = <span class="string">'images/xxx1.jpg'</span></span><br><span class="line"><span class="keyword">if</span>(str.indexOf(<span class="string">'李时珍'</span>)== <span class="number">-1</span>) &#123;</span><br><span class="line">    alert(<span class="string">'没有这个字符串'</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">'有这个'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(src.indexOf(<span class="string">'1.jpg'</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">    alert(<span class="string">'包含'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(src.includes(<span class="string">'1.jpg'</span>))&#123;</span><br><span class="line">    alert(<span class="string">'包含'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'hello world'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//是否以hell开头</span></span><br><span class="line"><span class="keyword">if</span>(str.startsWith(<span class="string">'hell'</span>))&#123;</span><br><span class="line">    str += <span class="string">'.你好'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 是否以你好结尾</span></span><br><span class="line"><span class="keyword">if</span>(str.endsWith(<span class="string">'你好'</span>))&#123;</span><br><span class="line">    str += <span class="string">'你长得真丑'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<p>padstart(),padend()例子：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//对数字进行补零</span></span><br><span class="line"><span class="keyword">let</span> addZero = <span class="function"><span class="params">num</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'0'</span> + num</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用padstart</span></span><br><span class="line"><span class="keyword">let</span> addZero1 = <span class="function"><span class="params">num</span> =&gt;</span> num.padStart(<span class="number">2</span>,<span class="string">'0'</span>)</span><br><span class="line">addZero1(<span class="string">'1'</span>)</span><br></pre></td></tr></table></figure></div>

<h4 id="模板字符串："><a href="#模板字符串：" class="headerlink" title="模板字符串："></a>模板字符串：</h4><p>es5字符串拼接：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    name: <span class="string">'小黑'</span>,</span><br><span class="line">    age: <span class="number">20</span>,</span><br><span class="line">    addr: <span class="string">'大学城'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">'姓名：'</span>+obj.name + <span class="string">'，年龄：'</span>+obj.age+<span class="string">',地址为:'</span>+obj.addr</span><br></pre></td></tr></table></figure></div>

<p>ES6中的字符串模板语法：</p>
<p>​    模板字符串&lt; template string)是增强版的字符串，用反引号(“)标识。它可以当作普通字符串使用，也可以用来定义多行字符串，或者在字符串中嵌入变量。模板字符串中嵌入变量，需要将变量名写在${ }之中。</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = <span class="function"><span class="params">x</span> =&gt;</span>x</span><br><span class="line"><span class="keyword">let</span> x = <span class="number">90</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">`输入变量x，输出结果为：<span class="subst">$&#123;fn(x)&#125;</span>`</span></span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br></pre></td></tr></table></figure></div>

<h3 id="对象扩展"><a href="#对象扩展" class="headerlink" title="对象扩展"></a>对象扩展</h3><p>如何定义对象：</p>
<p>ES5中</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>()</span><br><span class="line">obj.name = <span class="string">'小黑'</span></span><br><span class="line">obj.age = <span class="number">22</span></span><br><span class="line">obj.say = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'你好 小黑!!!'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字面量的形式</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    name: <span class="string">'小黑'</span>,</span><br><span class="line">    age: <span class="number">22</span>,</span><br><span class="line">    say:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'你好 小黑!!!'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>注：字面量的形式，一次性只能创建一个对象</p>
<p>ES6中，针对这种方案（属性名与值对应的变量名是一致的，可以省略变量名）</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">    name,</span><br><span class="line">    age,</span><br><span class="line">    say:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dawdaw'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><strong>使用前提，已经定义过当前属性名的变量值</strong></p>
<p>在对象内部可以简写函数</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'小黑'</span>,age = <span class="number">22</span></span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">    name,</span><br><span class="line">    age,</span><br><span class="line">    say()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dad'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>举例：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实现一个函数完成：接受两个参数，将该参数封装为对象之后返回</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="function">(<span class="params">x,y</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        x:x,</span><br><span class="line">        y:y</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//简化 return &#123;x,y&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="class-类"><a href="#class-类" class="headerlink" title="class 类"></a>class 类</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在ES5中批量产生对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name,</span><br><span class="line">    <span class="keyword">this</span>.age = age</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.say = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>在说话00`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person(<span class="string">'小黑'</span>,<span class="number">22</span>)</span><br><span class="line">p.say()</span><br></pre></td></tr></table></figure></div>

<p>​    <strong>ES6提供了更接近传统语言的写法，引入了Class (类)这个概念，作为对象的模板。通过class关键字，可以定义类。</strong><br>​        <strong>基本上，ES6的class可以看作只是一一个语法糖,它的绝大部分功能, ES5都可以做到，新的class写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。</strong></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Perso</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Person为类名</span></span><br><span class="line">    <span class="comment">// 添加属性 构造器</span></span><br><span class="line">    <span class="comment">// 当创建实例对象时，会自动执行constructor()，为类添加属性</span></span><br><span class="line">    <span class="keyword">constructor</span>(name,age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name,</span><br><span class="line">        <span class="keyword">this</span>.age = age</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'执行了'</span>)</span><br><span class="line">    &#125;<span class="comment">//每一个类都必须有一个构造器，如果没有显示声明，则系统会自动添加一个屋参的构造器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加方法</span></span><br><span class="line">    say()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name+<span class="string">"dadad"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = Perso(<span class="string">'小黑'</span>,<span class="number">22</span>)  <span class="comment">//实例化</span></span><br></pre></td></tr></table></figure></div>

<h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><h5 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a>constructor</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">constructor方法是类的默认方法，通过new命令生成对象实例时，自动调用该方法。一个类必须有constructor 方法,如</span><br><span class="line">果没有显式定义，-个空的constructor方法会被默认添加。</span><br><span class="line">	Class Point &#123;&#125;</span><br><span class="line">		&#x2F;等同于</span><br><span class="line">	class Point &#123;</span><br><span class="line">		constructor() &#123;&#125;</span><br><span class="line">	&#125;</span><br><span class="line">constructor方法默认返回实例对象(即this) , 完全可以指定返回另外一个对象。</span><br><span class="line">类必须使用new调用，否则会报错。这是它跟普通构造函数的一-个主要区别，后者不用new也可以执行。</span><br></pre></td></tr></table></figure></div>

<h5 id="class表达式"><a href="#class表达式" class="headerlink" title="class表达式"></a>class表达式</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">与函数一样，类也可以使用表达式的形式定义。</span><br><span class="line">const MyClass &#x3D; class Me &#123;</span><br><span class="line">	getClassName() &#123;</span><br><span class="line">		return Me .name </span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">上面代码使用表达式定义了一个类。需要注意的是，这个类的名字是MyClass而不是Me, Me只在Class的内部代码可用,指代当前类。.</span><br></pre></td></tr></table></figure></div>

<h5 id="class注意事项"><a href="#class注意事项" class="headerlink" title="class注意事项"></a>class注意事项</h5><p><em>*<code>ES5中，构造函数可以有变量提升</code></em></p>
<p><em><code>ES6 中，类不存在变量提升，先定义在使用**</code></em></p>
<h5 id="class的静态方法"><a href="#class的静态方法" class="headerlink" title="class的静态方法"></a>class的静态方法</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">类相当于实例的原型，所有在类中定义的方法，都会被实例继承。如果在一个方法前，加上static关键字，就表示该方法不会</span><br><span class="line">被实例继承，而是直接通过类来调用,这就称为“静态方法”。</span><br><span class="line">如果静态方法包含this关键字，这个this指的是类，而不是实例。</span><br><span class="line">父类的静态方法，可以被子类继承。.</span><br></pre></td></tr></table></figure></div>

<p>静态方法只能对象自身调用，不能实例化调用</p>
<p>例子：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tool</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> config()&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            host: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">            port: <span class="string">'27017'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="set和get访问器"><a href="#set和get访问器" class="headerlink" title="set和get访问器"></a>set和get访问器</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">与ES5一样，在“类”的内部可以使用get和set关键字，对某个属性设置存值函数和取值函数，拦截该属性的存取行为。</span><br><span class="line">Class MyClass &#123;	</span><br><span class="line">	constructor() &#123;</span><br><span class="line">	&#125;</span><br><span class="line">	get prop() &#123;</span><br><span class="line">		return” getter&#39; ;</span><br><span class="line">	&#125;</span><br><span class="line">	set prop(value) &#123;</span><br><span class="line">		console.log(&#39;setter: &#39; +value);</span><br><span class="line">&#125;&#125;</span><br><span class="line">let inst &#x3D; new MyClass();</span><br></pre></td></tr></table></figure></div>

<p>setter访问器 ：弱对属性进行了设置，则会执行getter访问器</p>
<p>getter访问器：若取出当前属性的值，则会执行setter访问器</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(id,name,age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.id =id,</span><br><span class="line">        <span class="keyword">this</span>.name = name,</span><br><span class="line">        <span class="keyword">this</span>.age = age</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">set</span> age(myAge)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'执行了set'</span>)</span><br><span class="line">        <span class="keyword">this</span>._age = myAge</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">get</span> age()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'执行了 get'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._age</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person(<span class="number">132123</span>,<span class="string">'小黑'</span>,<span class="number">22</span>)</span><br><span class="line">p.age = <span class="number">80</span></span><br><span class="line"><span class="built_in">console</span>.log(p.age)</span><br></pre></td></tr></table></figure></div>

<h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><p>ES5完成继承：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//继承父类的方法</span></span><br><span class="line"><span class="comment">//方法一:遍历父类的原型，将所有方法都放入学生原型</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> Person. prototype)&#123;</span><br><span class="line">	Student. prototype[i ]=Person. prototype[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法二</span></span><br><span class="line">Student.prototype = <span class="keyword">new</span> Person()</span><br></pre></td></tr></table></figure></div>

<p>ES6中继承：</p>
<p>继承是单向的，父类只有一个，子类可以有很多个</p>
<p>父类：基类</p>
<p>子类：派生类</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Class可以通过extends关键字实现继承，这比ESS的通过修改原型链实现继承，要清晰和方便很多。</span></span><br><span class="line">Class Point &#123;&#125;</span><br><span class="line">Class ColorPoint extends Point &#123;&#125;</span><br><span class="line"><span class="comment">//子类必须在constructor方法中调用super方法，否则新建实例时会报错。这是因为子类自己的this对象，</span></span><br><span class="line"><span class="comment">//必须先通过父类的构造函数完成塑造，得到与父类同样的实例属性和方法，然后再对其进行加工，加上子类自己的实例属性和</span></span><br><span class="line"><span class="comment">//方法。如果不调用super方法，子类就得不到this对象。</span></span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name,age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name,</span><br><span class="line">        <span class="keyword">this</span>.age = age</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name,age) &#123;</span><br><span class="line">        <span class="comment">//this.name = name,</span></span><br><span class="line">        <span class="comment">//this.age = age</span></span><br><span class="line">        <span class="keyword">super</span>(name,age) <span class="comment">//调用父类的构造函数</span></span><br><span class="line">        <span class="keyword">this</span>.no = no</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="JS异常处理"><a href="#JS异常处理" class="headerlink" title="JS异常处理"></a>JS异常处理</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">			JavaScript try-catch语句(错误处理)</span><br><span class="line">错误处理在处理程序设计中的重要性是毋庸置疑的,任何有影响力的veb应用程序都需要-套完善的错误处理机制。当然，</span><br><span class="line">大多数佼佼者确实做到了这一-点,但通常只有服务器端应用程序才能做到如此。实际上，服务器端团队往往会在错误处理机制</span><br><span class="line">上投入较大精力，通常要考虑按照类型、频率，或者其他重要的标准对错误进行分类。这样一来，开发人员就能够理解用户在</span><br><span class="line">使用简单数据库查询或者报告生成脚本时，应用程序可能会出现的问题。</span><br><span class="line">虽然客户端应用程序的错误处理也同样重要，但真正受到重视，还是最近几年的事。实际上，我们要面对这样-一个不争的</span><br><span class="line">事实:使用web的绝大多数人都不是技术高手，其中甚至很多人根本就不明白浏览器到底是什么，更不用说让他们说喜欢哪一</span><br><span class="line">个了。每个浏览器在发生JavaScript错误时的行为都或多或少有一些差异。 有的会显示小图标，有的则什么动静都没有，浏览</span><br><span class="line">器对JavaScript错误的这些默认行为对最终用户而言，毫无规律可循。最理想的情况下,用户遇到错误搞不清为什么，他们会</span><br><span class="line">再试着重做一次，最糟糕的情况下，用户会恼羞成怒，-去不复返了。良好的错误处理机制可以让用户及时得到提醒,知道到</span><br><span class="line">底发生了什么事，因而不会惊慌失措。为此，作为开发人员，我们必须理解在处理JavaScript错误的时候，都有哪些手段和工</span><br><span class="line">具可以利用。</span><br></pre></td></tr></table></figure></div>

<p>try…..catch</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'try 语句'</span>)</span><br><span class="line">    fn()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'fn()执行了'</span>)</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//很严重的语法错误会直接报错，不会被catch捕捉到</span></span><br></pre></td></tr></table></figure></div>

<p>finally子句：</p>
<p>​        虽然在try-catch语句中是可选的，但finally子句- -经使用，其代码无论如何都会执行。换句话说，try 语句块中的代码全部正常执行，finally 子句会执行;如果因为出错而执行了catch语句块，finally 子句照样还会执行。只要代码中包含finally 子句，则无论try或catch语句块中包含什么样的代码–甚 至returm语句，都不会阻止finally子句的执行。来看下面这个函<br>数:</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> arr = [<span class="number">13</span>,<span class="number">13</span>,<span class="number">123</span>,<span class="number">123</span>,<span class="number">12</span>,<span class="number">31</span>,<span class="number">23</span>]</span><br><span class="line">  arr.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(item + i)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'发现错误'</span>,error)</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'天下第一'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>错误类型：</p>
<p><code>Error</code>      <code>EvalError</code>     <code>RangeError</code>     <code>ReferenceError</code>     <code>SyntaxError</code>    <code>TypeError</code>        <code>URIError</code></p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">其中, Error是基类型,其他错误类型都继承自该类型，因此,所有错误类型共享了- -组相同的属性(错误对象中的方法全是默</span><br><span class="line">认的对象方法》。Error类型的错误很少见，如果有也是浏览器抛出的;这个基类型的主要目的是供开发人员抛出自定义错误。</span><br><span class="line">EvalError.类型的错误是在使用eal()函数而发生异常时抛出。ECMA-262中对这个错误有如下描述:“表示全局函数eval的</span><br><span class="line">使用方式与其定义不相行。&quot;除此之外,并没有救到底什么情况会引发这种错误给出说明。在实际开发中碰到这种错误的可能性</span><br><span class="line">并不大。</span><br><span class="line">RangeError.类型的错误会在数值超出相应范围时触发。例如，在定义数组时，如果指定了数组不支持的项数(如-20或Number.MAX_ _VALUE) ,就会触发这种错误。</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当try-catch语句中发生错误时,浏览器会认为错误已经被处理了。因而不会通过前面讨论的机制记录或报告错误。对于那些不要求用户懂技术，也不需要用户理解错误的Web应用程序，这应该说是个理想的结果。不过, try-catch 能够让我们实现自己的错误处理机制。</span><br><span class="line">使用try-catch最适合处理那些我们无法控制的错误，假设你在使用-一个大型的JavaScript库中的函数,该函数可能会有意无</span><br><span class="line">意地抛出- -些错误。由于我们不能修改这个库的源代码，所以大可将对该函数的调用放在try-catch 语句当中。万-有什么错</span><br><span class="line">误发生，也好恰当地处理它们。</span><br><span class="line">在明明白白地知道自己的代码会发生错误时，再使用try-catch语句就不太合适了●例如，如果传递给函数的参数是字符串而</span><br><span class="line">非数值，就会造成函数出错，那么就应该先检查函数的类型，然后再决定如果去做。在这种情况下，不应该使用try-catch语</span><br><span class="line">句。</span><br></pre></td></tr></table></figure></div>

<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5. try-catch语句执行顺序</span><br><span class="line">看下面的例子:</span><br><span class="line">try &#123;</span><br><span class="line">	throw &quot;test&quot;;</span><br><span class="line">&#125; catch (ex) &#123;</span><br><span class="line">	console. log(ex);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">	console. log(&#39;finally&#39;);</span><br><span class="line">&#x2F;&#x2F;test</span><br><span class="line">&#x2F;&#x2F;finally</span><br><span class="line">执行顺序为:首先执行try语句块中的代码，如果抛出异常，接着执行catch语句块中代码，如果没有异常，catch语句块中代码将会被忽略,但不管是否有异常,最后最会执行finally子句.try后面必须接着-一个catch或者fnally ,也就是说JavaScript中的try-catch可以有3中组合形式。即try-catch. try-Finally、 try-catch-Finally 三种形式。</span><br></pre></td></tr></table></figure></div>

<h3 id="promise"><a href="#promise" class="headerlink" title="promise"></a>promise</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Promise的含义</span><br><span class="line">Promise是异步编程的一种解决方案,比传统的解决方案--回调函数和事件 --更合理 和更强大。它由社区最早提出和实现，</span><br><span class="line">ES6将其写进了语言标准，统一了用法，原生提供了Promise对象</span><br><span class="line">所谓Promise,简单说就是一个容器,里面保存着某个未来才会结束的事件(通常是一个异步操作)的结果o从语法上说,Promise是一个对象，从它可以获取异步操作的消息。Promise提供统- - 的API,各种异步操作都可以用同样的方法进行处理。</span><br><span class="line">有了Promise对象，就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。此外, Promise对象提供统一的接口，使得控制异步操作更加容易。</span><br></pre></td></tr></table></figure></div>

<p>异步：同时执行，并发</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'helo 11'</span>)</span><br><span class="line">&#125;,<span class="number">30</span>)</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'helo 22'</span>)</span><br><span class="line">&#125;,<span class="number">50</span>)</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'helo 33'</span>)</span><br><span class="line">&#125;,<span class="number">10</span>)</span><br></pre></td></tr></table></figure></div>

<p>同步：按顺序执行</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'hello 1'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'hello 2'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'hello 3'</span>)</span><br></pre></td></tr></table></figure></div>

<p>异步队列：注意回调地狱</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//解决异步队列问题</span></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'11'</span>)</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'22'</span>)</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'33'</span>)</span><br><span class="line">        &#125;,<span class="number">0</span>)</span><br><span class="line">    &#125;,<span class="number">30</span>)</span><br><span class="line">&#125;,<span class="number">50</span>)</span><br></pre></td></tr></table></figure></div>

<p>promise对象：</p>
<p>​    Promise对象：</p>
<p>​        1）new Promise()对象的时候需要将一个函数作为参数传递过去</p>
<p>​        2）作为参数的函数，需要接收两个参数，resolve，reject，这两个参数自身又是函数</p>
<p>​        3）Promise对象有三个状态</p>
<p>​                    pending：进行中</p>
<p>​                    fullfilled： 已成功</p>
<p>​                    rejected： 已失败</p>
<p>​                    状态的转换有两种途径：</p>
<p>​                                pending ———&gt; fullfilled                      统一描述为：resolved</p>
<p>​                                pending ———&gt; rejected                       统一描述为：rejected</p>
<p>常见方法</p>
<p>​        catch()</p>
<p>​        then()</p>
<p>​        finally()</p>
<p>基本语法：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Promise实例生成以后，可以用then方法分别指定resolved状态rejected状态的回调函数。</span><br><span class="line">promise.then(function(value) &#123;</span><br><span class="line"> 	success</span><br><span class="line"> &#125;, function(error) &#123;</span><br><span class="line"> 	failure</span><br><span class="line"> &#125;);</span><br><span class="line">then方法可以接受两个回调函数作为参数。第一一个回调函数是Promise对象的状态变为resolved时调用，第二个回调函数是Promise对象的状态变为rejected时调用。其中，第二个函数是可选的，不一定要提供。这两个</span><br><span class="line">函数都接受Promise对象传出的值作为参数。</span><br></pre></td></tr></table></figure></div>

<p>举例：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//发起异步操作</span></span><br><span class="line">    <span class="comment">// 成功完毕</span></span><br><span class="line">    resolve(<span class="number">10</span>);   <span class="comment">//resolved</span></span><br><span class="line">    <span class="comment">//失败</span></span><br><span class="line">    <span class="comment">//reject('error')  //rejected</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">promise.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;,err =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(promise)</span><br></pre></td></tr></table></figure></div>

<p>promise使用：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// console.log('11')  //异步操作</span></span><br><span class="line">        <span class="comment">// resolve('成功了')</span></span><br><span class="line">        reject(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            code: <span class="number">401</span>,</span><br><span class="line">            msg: <span class="string">'异常错误'</span></span><br><span class="line">        &#125;))</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">p.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;,err =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>依次输出：settimeout 11   30毫秒</li>
<li>settimeout 22   50毫秒</li>
<li>settimeout 33   0毫秒   用promise实现</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fn1 = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'11'</span>)</span><br><span class="line">            resolve()</span><br><span class="line">        &#125;, <span class="number">30</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn2 = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'22'</span>)</span><br><span class="line">            resolve()</span><br><span class="line">        &#125;, <span class="number">50</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn3 = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'33'</span>)</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">fn1().then(fn2).then(fn3)</span><br></pre></td></tr></table></figure></div>

<p>promise发起ajax请求：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//发起ajax请求</span></span><br><span class="line">    <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">    xhr.open(<span class="string">'GET'</span>,<span class="string">'https://douban.uieee.com/v2/movie/coming_soon'</span>)</span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.status==<span class="number">200</span> &amp;&amp; <span class="keyword">this</span>.readyState ==<span class="number">4</span>)&#123;</span><br><span class="line">            resolve(<span class="keyword">this</span>.responseText)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xhr.send(<span class="literal">null</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">promise.then(<span class="function"><span class="params">data</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(data))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>

<p>封装ajax，用promise：</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//es5版</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">method, url, fn, params</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">    <span class="keyword">if</span> (method == <span class="string">'GET'</span> &amp;&amp; params != <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="comment">//有参</span></span><br><span class="line">        url = url + <span class="string">'?'</span> + params</span><br><span class="line">    &#125;</span><br><span class="line">    xhr.open(method, url, <span class="literal">true</span>)</span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="keyword">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">            fn(<span class="keyword">this</span>.responseText); <span class="comment">//后台信息返回，通过回调函数将结果传递给调用者</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (method == <span class="string">'POST'</span> &amp;&amp; params != <span class="literal">undefined</span>) &#123;</span><br><span class="line">        xhr.send(params)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        xhr.send(<span class="literal">null</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//promise版</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">method, url, params</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">        <span class="keyword">if</span> (method == <span class="string">'GET'</span> &amp;&amp; params != <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="comment">//有参</span></span><br><span class="line">            url = url + <span class="string">'?'</span> + params</span><br><span class="line">        &#125;</span><br><span class="line">        xhr.open(method, url, <span class="literal">true</span>)</span><br><span class="line">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="keyword">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">                resolve(<span class="keyword">this</span>.responseText); <span class="comment">//后台信息返回，通过回调函数将结果传递给调用者</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (method == <span class="string">'POST'</span> &amp;&amp; params != <span class="literal">undefined</span>) &#123;</span><br><span class="line">            xhr.send(params)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            xhr.send(<span class="literal">null</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">概述</span><br><span class="line">历史.上, JavaScript一直没有模块(module)体系，无法将- -个大程序拆分成互相依赖的小文件，再用简单的方法拼装</span><br><span class="line">起来I其他语言都有这项功能,比如Ruby的require、Python的import,甚至就连CSS 都有@import ,但是JavaScript</span><br><span class="line">任何这方面的支持都没有，这对开发大型的、复杂的项目形成了巨大障碍。</span><br><span class="line">在ES6之前，社区制定了一些模块加载方案，最主要的有CommonlS 和AMD两种。前者用于服务器，后者用于浏览器。</span><br><span class="line">ES6在语言标准的层面上，实现了模块功能，而且实现得相当简单,完全可以职代CommonJS 和AMD规范，成为浏览器</span><br><span class="line">和服务器通用的模块解决方案。</span><br><span class="line">ES6模块的设计思想是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonIS和AMD</span><br><span class="line">模块，都只能在运行时确定这些东西。比如，CommonJS模块就是对象，输入时必须查找对象属性。</span><br><span class="line">ES6模块不是对象，而是通过export命令显式指定输出的代码，再通过import命令输入。</span><br></pre></td></tr></table></figure></div>

<p>export：  导出</p>
<p>import： 导入</p>
<p>​            import —–from———-   从什么模块，导入</p>
<h4 id="严格模式："><a href="#严格模式：" class="headerlink" title="严格模式："></a>严格模式：</h4><h4 id="严格模式主要有以下限制："><a href="#严格模式主要有以下限制：" class="headerlink" title="严格模式主要有以下限制："></a>严格模式主要有以下限制：</h4><ul>
<li>变量必须声明后再使用</li>
<li>函数的参数不能有同名属性，否则报错</li>
<li>不能使用with语句</li>
<li>不能对只读属性赋值，否则报错</li>
<li>不能使用前缀0表示八进制数，否则报错</li>
<li>不能删除不可删除的属性，否则报错</li>
<li>不能删除变量<code>delete prop</code>，会报错，只能删除<code>delete global[prop]</code></li>
<li><code>eval</code>和<code>arguments</code>不能被重新赋值</li>
<li><code>arguments</code>不会自动反映函数参数的变化</li>
<li>不能使用<code>arguments.callee</code></li>
<li>不能使用<code>arguments.caller</code></li>
<li>禁止<code>this</code>指向全局对象</li>
<li>不能使用<code>fn.caller</code>和<code>fn.arguments</code>获取函数调用的堆栈</li>
<li>增加了保留字（比如<code>protected</code>、<code>static</code> 、<code>interface</code></li>
</ul>
]]></content>
      <categories>
        <category>ES6</category>
      </categories>
  </entry>
</search>
